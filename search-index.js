var searchIndex = {};
searchIndex["kafka"] = {"doc":"Clients for comunicating with a [Kafka](http://kafka.apache.org/)\ncluster.  These are:","items":[[0,"error","kafka","Error struct and methods",null,null],[4,"Error","kafka::error","The various errors this library can produce.",null,null],[13,"Io","","Input/Output error while communicating with Kafka",0,null],[13,"Kafka","","An error as reported by a remote Kafka server",0,null],[13,"Ssl","","An error as reported by OpenSsl",0,null],[13,"UnsupportedProtocol","","Failure to correctly parse the server response due to the\nserver speaking a newer protocol version (than the one this\nlibrary supports)",0,null],[13,"UnsupportedCompression","","Failure to correctly parse the server response by this library\ndue to an unsupported compression format of the data",0,null],[13,"InvalidInputSnappy","","Failure to decode a snappy compressed response from Kafka",0,null],[13,"UnexpectedEOF","","Failure to decode a response due to an insufficient number of bytes available",0,null],[13,"CodecError","","Failure to decode or encode a response or request respectively",0,null],[13,"StringDecodeError","","Failure to decode a string into a valid utf8 byte sequence",0,null],[13,"NoHostReachable","","Unable to reach any host",0,null],[13,"NoTopicsAssigned","","Unable to set up `Consumer` due to missing topic assignments",0,null],[13,"InvalidDuration","","An invalid user-provided duration",0,null],[4,"KafkaCode","","Various errors reported by a remote Kafka server.\nSee also [Kafka Errors](http://kafka.apache.org/protocol.html)",null,null],[13,"Unknown","","An unexpected server error",1,null],[13,"OffsetOutOfRange","","The requested offset is outside the range of offsets\nmaintained by the server for the given topic/partition",1,null],[13,"CorruptMessage","","This indicates that a message contents does not match its CRC",1,null],[13,"UnknownTopicOrPartition","","This request is for a topic or partition that does not exist\non this broker.",1,null],[13,"InvalidMessageSize","","The message has a negative size",1,null],[13,"LeaderNotAvailable","","This error is thrown if we are in the middle of a leadership\nelection and there is currently no leader for this partition\nand hence it is unavailable for writes.",1,null],[13,"NotLeaderForPartition","","This error is thrown if the client attempts to send messages\nto a replica that is not the leader for some partition. It\nindicates that the clients metadata is out of date.",1,null],[13,"RequestTimedOut","","This error is thrown if the request exceeds the user-specified\ntime limit in the request.",1,null],[13,"BrokerNotAvailable","","This is not a client facing error and is used mostly by tools\nwhen a broker is not alive.",1,null],[13,"ReplicaNotAvailable","","If replica is expected on a broker, but is not (this can be\nsafely ignored).",1,null],[13,"MessageSizeTooLarge","","The server has a configurable maximum message size to avoid\nunbounded memory allocation. This error is thrown if the\nclient attempt to produce a message larger than this maximum.",1,null],[13,"StaleControllerEpoch","","Internal error code for broker-to-broker communication.",1,null],[13,"OffsetMetadataTooLarge","","If you specify a string larger than configured maximum for\noffset metadata",1,null],[13,"NetworkException","","The server disconnected before a response was received.",1,null],[13,"GroupLoadInProgress","","The broker returns this error code for an offset fetch request\nif it is still loading offsets (after a leader change for that\noffsets topic partition), or in response to group membership\nrequests (such as heartbeats) when group metadata is being\nloaded by the coordinator.",1,null],[13,"GroupCoordinatorNotAvailable","","The broker returns this error code for group coordinator\nrequests, offset commits, and most group management requests\nif the offsets topic has not yet been created, or if the group\ncoordinator is not active.",1,null],[13,"NotCoordinatorForGroup","","The broker returns this error code if it receives an offset\nfetch or commit request for a group that it is not a\ncoordinator for.",1,null],[13,"InvalidTopic","","For a request which attempts to access an invalid topic\n(e.g. one which has an illegal name), or if an attempt is made\nto write to an internal topic (such as the consumer offsets\ntopic).",1,null],[13,"RecordListTooLarge","","If a message batch in a produce request exceeds the maximum\nconfigured segment size.",1,null],[13,"NotEnoughReplicas","","Returned from a produce request when the number of in-sync\nreplicas is lower than the configured minimum and requiredAcks is\n-1.",1,null],[13,"NotEnoughReplicasAfterAppend","","Returned from a produce request when the message was written\nto the log, but with fewer in-sync replicas than required.",1,null],[13,"InvalidRequiredAcks","","Returned from a produce request if the requested requiredAcks is\ninvalid (anything other than -1, 1, or 0).",1,null],[13,"IllegalGeneration","","Returned from group membership requests (such as heartbeats) when\nthe generation id provided in the request is not the current\ngeneration.",1,null],[13,"InconsistentGroupProtocol","","Returned in join group when the member provides a protocol type or\nset of protocols which is not compatible with the current group.",1,null],[13,"InvalidGroupId","","Returned in join group when the groupId is empty or null.",1,null],[13,"UnknownMemberId","","Returned from group requests (offset commits/fetches, heartbeats,\netc) when the memberId is not in the current generation.",1,null],[13,"InvalidSessionTimeout","","Return in join group when the requested session timeout is outside\nof the allowed range on the broker",1,null],[13,"RebalanceInProgress","","Returned in heartbeat requests when the coordinator has begun\nrebalancing the group. This indicates to the client that it\nshould rejoin the group.",1,null],[13,"InvalidCommitOffsetSize","","This error indicates that an offset commit was rejected because of\noversize metadata.",1,null],[13,"TopicAuthorizationFailed","","Returned by the broker when the client is not authorized to access\nthe requested topic.",1,null],[13,"GroupAuthorizationFailed","","Returned by the broker when the client is not authorized to access\na particular groupId.",1,null],[13,"ClusterAuthorizationFailed","","Returned by the broker when the client is not authorized to use an\ninter-broker or administrative API.",1,null],[13,"InvalidTimestamp","","The timestamp of the message is out of acceptable range.",1,null],[13,"UnsupportedSaslMechanism","","The broker does not support the requested SASL mechanism.",1,null],[13,"IllegalSaslState","","Request is not valid given the current SASL state.",1,null],[13,"UnsupportedVersion","","The version of API is not supported.",1,null],[6,"Result","","A type for results generated by this crate&#39;s functions where the `Err` type\nis hard-wired to `enums::Error`.",null,null],[11,"fmt","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"sslerror"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"handshakeerror"}],"output":{"name":"error"}}],[11,"clone","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"fmt","","",0,null],[0,"client","kafka","Kafka Client - A mid-level abstraction for a kafka cluster\nallowing building higher level constructs.",null,null],[3,"PartitionOffset","kafka::client","A retrieved offset for a particular partition in the context of an\nalready known topic.",null,null],[12,"offset","","",2,null],[12,"partition","","",2,null],[3,"TopicPartitionOffset","","A retrieved offset of a particular topic partition.",null,null],[12,"offset","","",3,null],[12,"topic","","",3,null],[12,"partition","","",3,null],[3,"SecurityConfig","","Security relevant configuration options for `KafkaClient`.",null,null],[3,"KafkaClient","","Client struct keeping track of brokers and topic metadata.",null,null],[3,"FetchGroupOffset","","Data point identifying a topic partition to fetch a group&#39;s offset\nfor.  See `KafkaClient::fetch_group_offsets`.",null,null],[12,"topic","","The topic to fetch the group offset for",4,null],[12,"partition","","The partition to fetch the group offset for",4,null],[3,"CommitOffset","","Data point identifying a particular topic partition offset to be\ncommited.\nSee `KafkaClient::commit_offsets`.",null,null],[12,"offset","","The offset to be committed",5,null],[12,"topic","","The topic to commit the offset for",5,null],[12,"partition","","The partition to commit the offset for",5,null],[3,"ProduceMessage","","Message data to be sent/produced to a particular topic partition.\nSee `KafkaClient::produce_messages` and `Producer::send`.",null,null],[12,"key","","The &quot;key&quot; data of this message.",6,null],[12,"value","","The &quot;value&quot; data of this message.",6,null],[12,"topic","","The topic to produce this message to.",6,null],[12,"partition","","The partition (of the corresponding topic) to produce this\nmessage to.",6,null],[3,"FetchPartition","","Partition related request data for fetching messages.\nSee `KafkaClient::fetch_messages`.",null,null],[12,"topic","","The topic to fetch messages from.",7,null],[12,"offset","","The offset as of which to fetch messages.",7,null],[12,"partition","","The partition to fetch messasges from.",7,null],[12,"max_bytes","","Specifies the max. amount of data to fetch (for this\npartition.)  This implicitely defines the biggest message the\nclient can accept.  If this value is too small, no messages\ncan be delivered.  Setting this size should be in sync with\nthe producers to the partition.",7,null],[4,"Compression","","Compression types supported by kafka. The numeral values of this\nenumeration correspond to the compression encoding in the\nattributes of a Message in the protocol.",null,null],[13,"NONE","","",8,null],[13,"GZIP","","",8,null],[13,"SNAPPY","","",8,null],[4,"FetchOffset","","Possible values when querying a topic&#39;s offset.\nSee `KafkaClient::fetch_offsets`.",null,null],[13,"Earliest","","Receive the earliest available offset.",9,null],[13,"Latest","","Receive the latest offset.",9,null],[13,"ByTime","","Used to ask for all messages before a certain time (ms); unix\ntimestamp in milliseconds.\nSee https://cwiki.apache.org/confluence/display/KAFKA/Writing+a+Driver+for+Kafka#WritingaDriverforKafka-Offsets",9,null],[4,"GroupOffsetStorage","","Defines the availale storage types to utilize when fetching or\ncomitting group offsets.  See also `KafkaClient::set_group_offset_storage`.",null,null],[13,"Zookeeper","","Zookeeper based storage (available as of kafka 0.8.1)",10,null],[13,"Kafka","","Kafka based storage (available as of Kafka 0.8.2). This is the\nprefered method for groups to store their offsets at.",10,null],[4,"RequiredAcks","","Possible choices on acknowledgement requirements when\nproducing/sending messages to Kafka. See\n`KafkaClient::produce_messages`.",null,null],[13,"None","","Indicates to the receiving Kafka broker not to acknowlegde\nmessages sent to it at all. Sending messages with this\nacknowledgement requirement translates into a fire-and-forget\nscenario which - of course - is very fast but not reliable.",11,null],[13,"One","","Requires the receiving Kafka broker to wait until the sent\nmessages are written to local disk.  Such messages can be\nregarded as acknowledged by one broker in the cluster.",11,null],[13,"All","","Requires the sent messages to be acknowledged by all in-sync\nreplicas of the targeted topic partitions.",11,null],[0,"metadata","","Types related to topic metadata for introspection by clients.\nExample: `KafkaClient::topics()`.",null,null],[3,"Broker","kafka::client::metadata","Describes a Kafka broker node `kafka-rust` is communicating with.",null,null],[3,"TopicNames","","An iterator over the topic names.",null,null],[3,"Topics","","A view on the loaded metadata about topics and their partitions.",null,null],[3,"TopicIter","","An interator over topics.",null,null],[3,"Topic","","A view on the loaded metadata for a particular topic.",null,null],[3,"Partitions","","Metadata relevant to partitions of a particular topic.",null,null],[3,"PartitionIter","","An interator over a topic&#39;s partitions.",null,null],[3,"Partition","","Metadata about a particular topic partition.",null,null],[11,"new","","Constructs a view of the currently loaded topic metadata from\nthe specified kafka client.",12,{"inputs":[{"name":"kafkaclient"}],"output":{"name":"topics"}}],[11,"len","","Retrieves the number of the underlying topics.",12,null],[11,"iter","","Provides an iterator over the underlying topics.",12,null],[11,"names","","A conveniece method to return an iterator over the topics&#39;\nnames.",12,null],[11,"contains","","A convenience method to determine whether the specified topic\nis known.",12,null],[11,"partitions","","Retrieves the partitions of a specified topic.",12,null],[11,"fmt","","",12,null],[11,"into_iter","","",12,null],[11,"next","","",13,null],[11,"name","","Retrieves the name of this topic.",14,null],[11,"partitions","","Retrieves the list of all partitions for this topic.",14,null],[11,"fmt","","",14,null],[11,"len","","Retrieves the number of the topic&#39;s partitions.",15,null],[11,"is_empty","","Tests for `.len() &gt; 0`.",15,null],[11,"iter","","Retrieves an iterator of the partitions of the underlying topic.",15,null],[11,"partition","","Finds a specified partition identified by its id.",15,null],[11,"available_ids","","Convenience method to retrieve the identifiers of all\ncurrently &quot;available&quot; partitions.  Such partitions are known\nto have a leader broker and can be sent messages to.",15,null],[11,"fmt","","",15,null],[11,"into_iter","","",15,null],[11,"next","","",16,null],[11,"id","","Retrieves the identifier of this topic partition.",17,null],[11,"leader","","Retrieves the current leader broker of this partition - if\nany.  A partition with a leader is said to be &quot;available&quot;.",17,null],[11,"is_available","","Determines whether this partition is currently &quot;available&quot;.\nSee `Partition::leader()`.",17,null],[11,"fmt","","",17,null],[11,"fmt","","",18,null],[11,"id","","Retrives the node_id of this broker as identified with the\nremote Kafka cluster.",18,null],[11,"host","","Retrieves the host:port of the this Kafka broker.",18,null],[11,"next","","",19,null],[11,"fmt","kafka::client","",20,null],[11,"new","","In the future this will also support a kerbos via #51.",20,{"inputs":[{"name":"sslcontext"}],"output":{"name":"securityconfig"}}],[0,"fetch","","A representation of fetched messages from Kafka.",null,null],[3,"Data","kafka::client::fetch","The successfully fetched data payload for a particular partition.",null,null],[3,"Message","","A fetched message from a remote Kafka broker for a particular\ntopic partition.",null,null],[12,"offset","","The offset at which this message resides in the remote kafka\nbroker topic partition.",21,null],[12,"key","","The &quot;key&quot; data of this message.  Empty if there is no such\ndata for this message.",21,null],[12,"value","","The value data of this message.  Empty if there is no such\ndata for this message.",21,null],[3,"Partition","","The result of a &quot;fetch messages&quot; request from a particular Kafka\nbroker for a single topic partition only.  Beside the partition\nidentifier, this structure provides an iterator over the actually\nrequested message data.",null,null],[3,"Response","","The result of a &quot;fetch messages&quot; request from a particular Kafka\nbroker. Such a response can contain messages for multiple topic\npartitions.",null,null],[3,"Topic","","The result of a &quot;fetch messages&quot; request from a particular Kafka\nbroker for a single topic only.  Beside the name of the topic,\nthis structure provides an iterator over the topic partitions from\nwhich messages were requested.",null,null],[17,"DEFAULT_COMPRESSION","kafka::client","The default value for `KafkaClient::set_compression(..)`",null,null],[17,"DEFAULT_FETCH_MAX_WAIT_TIME_MILLIS","","The default value for `KafkaClient::set_fetch_max_wait_time(..)`",null,null],[17,"DEFAULT_FETCH_MIN_BYTES","","The default value for `KafkaClient::set_fetch_min_bytes(..)`",null,null],[17,"DEFAULT_FETCH_MAX_BYTES_PER_PARTITION","","The default value for `KafkaClient::set_fetch_max_bytes(..)`",null,null],[17,"DEFAULT_FETCH_CRC_VALIDATION","","The default value for `KafkaClient::set_fetch_crc_validation(..)`",null,null],[17,"DEFAULT_GROUP_OFFSET_STORAGE","","The default value for `KafkaClient::set_group_offset_storage(..)`",null,null],[17,"DEFAULT_RETRY_BACKOFF_TIME_MILLIS","","The default value for `KafkaClient::set_retry_backoff_time(..)`",null,null],[17,"DEFAULT_RETRY_MAX_ATTEMPTS","","The default value for `KafkaClient::set_retry_max_attempts(..)`",null,null],[17,"DEFAULT_CONNECTION_IDLE_TIMEOUT_MILLIS","","The default value for `KafkaClient::set_connection_idle_timeout(..)`",null,null],[11,"fmt","","",22,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",4,null],[11,"new","","",4,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"self"}}],[11,"as_ref","","",4,null],[11,"fmt","","",5,null],[11,"new","","",5,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i64"}],"output":{"name":"self"}}],[11,"as_ref","","",5,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"fmt","","",6,null],[11,"as_ref","","",6,null],[11,"new","","A convenient constructor method to create a new produce\nmessage with all attributes specified.",6,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"option"},{"name":"option"}],"output":{"name":"self"}}],[11,"fmt","","",7,null],[11,"new","","Creates a new &quot;fetch messages&quot; request structure with an\nunspecified `max_bytes`.",7,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i64"}],"output":{"name":"self"}}],[11,"with_max_bytes","","Sets the `max_bytes` value for the &quot;fetch messages&quot; request.",7,null],[11,"as_ref","","",7,null],[11,"new","","Creates a new instance of KafkaClient. Before being able to\nsuccessfully use the new client, you&#39;ll have to load metadata.",22,{"inputs":[{"name":"vec"}],"output":{"name":"kafkaclient"}}],[11,"new_secure","","Creates a new secure instance of KafkaClient. Before being able to\nsuccessfully use the new client, you&#39;ll have to load metadata.",22,{"inputs":[{"name":"vec"},{"name":"securityconfig"}],"output":{"name":"kafkaclient"}}],[11,"hosts","","Exposes the hosts used for discovery of the target kafka\ncluster.  This set of hosts corresponds to the values supplied\nto `KafkaClient::new`.",22,null],[11,"set_compression","","Sets the compression algorithm to use when sending out messages.",22,null],[11,"compression","","Retrieves the current `KafkaClient::set_compression` setting.",22,null],[11,"set_fetch_max_wait_time","","Sets the maximum time in milliseconds to wait for insufficient\ndata to become available when fetching messages.",22,null],[11,"fetch_max_wait_time","","Retrieves the current `KafkaClient::set_fetch_max_wait_time`\nsetting.",22,null],[11,"set_fetch_min_bytes","","Sets the minimum number of bytes of available data to wait for\nas long as specified by `KafkaClient::set_fetch_max_wait_time`\nwhen fetching messages.",22,null],[11,"fetch_min_bytes","","Retrieves the current `KafkaClient::set_fetch_min_bytes`\nsetting.",22,null],[11,"set_fetch_max_bytes_per_partition","","Sets the default maximum number of bytes to obtain from _a\nsingle kafka partition_ when fetching messages.",22,null],[11,"fetch_max_bytes_per_partition","","Retrieves the current\n`KafkaClient::set_fetch_max_bytes_per_partition` setting.",22,null],[11,"set_fetch_crc_validation","","Specifies whether the to perform CRC validation on fetched\nmessages.",22,null],[11,"fetch_crc_validation","","Retrieves the current `KafkaClient::set_fetch_crc_validation`\nsetting.",22,null],[11,"set_group_offset_storage","","Specifies the group offset storage to address when fetching or\ncommitting group offsets.",22,null],[11,"group_offset_storage","","Retrieves the current `KafkaClient::set_group_offset_storage`\nsettings.",22,null],[11,"set_retry_backoff_time","","Specifies the time to wait before retrying a failed,\nrepeatable operation against Kafka.  This avoids retrying such\noperations in a tight loop.",22,null],[11,"retry_backoff_time","","Retrieves the current `KafkaClient::set_retry_backoff_time`\nsetting.",22,null],[11,"set_retry_max_attempts","","Specifies the upper limit of retry attempts for failed,\nrepeatable operations against kafka.  This avoids retrying\nthem forever.",22,null],[11,"retry_max_attempts","","Retrieves the current `KafkaClient::set_retry_max_attempts`\nsetting.",22,null],[11,"set_connection_idle_timeout","","Specifies the timeout after which idle connections will\ntransparently be closed/re-established by `KafkaClient`.",22,null],[11,"connection_idle_timeout","","Retrieves the current\n`KafkaClient::set_connection_idle_timeout` setting.",22,null],[11,"topics","","Provides a view onto the currently loaded metadata of known .",22,null],[11,"load_metadata_all","","Resets and loads metadata for all topics from the underlying\nbrokers.",22,null],[11,"load_metadata","","Reloads metadata for a list of supplied topics.",22,null],[11,"reset_metadata","","Clears metadata stored in the client.  You must load metadata\nafter this call if you want to use the client.",22,null],[11,"fetch_offsets","","Fetch offsets for a list of topics",22,null],[11,"fetch_topic_offsets","","Fetch offset for a single topic.",22,null],[11,"fetch_messages","","Fetch messages from Kafka (multiple topic, partitions).",22,null],[11,"fetch_messages_for_partition","","Fetch messages from a single kafka partition.",22,null],[11,"produce_messages","","Send a message to Kafka",22,null],[11,"commit_offsets","","Commit offset for a topic partitions on behalf of a consumer group.",22,null],[11,"commit_offset","","Commit offset of a particular topic partition on behalf of a\nconsumer group.",22,null],[11,"fetch_group_offsets","","Fetch offset for a specified list of topic partitions of a consumer group",22,null],[11,"fetch_group_topic_offsets","","Fetch offset for all partitions of a particular topic of a consumer group",22,null],[0,"consumer","kafka","Kafka Consumer - A higher-level API for consuming kafka topics.",null,null],[3,"Message","kafka::consumer","A fetched message from a remote Kafka broker for a particular\ntopic partition.",null,null],[12,"offset","","The offset at which this message resides in the remote kafka\nbroker topic partition.",21,null],[12,"key","","The &quot;key&quot; data of this message.  Empty if there is no such\ndata for this message.",21,null],[12,"value","","The value data of this message.  Empty if there is no such\ndata for this message.",21,null],[3,"Builder","","A Kafka Consumer builder easing the process of setting up various\nconfiguration settings.",null,null],[3,"Consumer","","The Kafka Consumer",null,null],[3,"MessageSets","","Messages retrieved from kafka in one fetch request.  This is a\nconcatenation of blocks of messages successfully retrieved from\nthe consumed topic partitions.  Each such partitions is guaranteed\nto be present at most once in this structure.",null,null],[3,"MessageSet","","A set of messages succesfully retrieved from a specific topic\npartition.",null,null],[3,"MessageSetsIter","","An iterator over the consumed topic partition message sets.",null,null],[11,"fmt","","",23,null],[11,"with_group","","Specifies the group on whose behalf to maintain consumed\nmessage offsets.",23,null],[11,"with_topic","","Specifies a topic to consume. All of the available partitions\nof the identified topic will be consumed unless overriden\nlater using `with_topic_partitions`.",23,null],[11,"with_topic_partitions","","Explicetely specifies topic partitions to consume. Only the\nspecified partitions for the identified topic will be consumed\nunless overriden later using `with_topic`.",23,null],[11,"with_security","","Specifies the security config to use.\nSee `KafkaClient::new_secure` for more info.",23,null],[11,"with_fallback_offset","","Specifies the offset to use when none was committed for the\nunderlying group yet or the consumer has no group configured.",23,null],[11,"with_fetch_max_wait_time","","See `KafkaClient::set_fetch_max_wait_time`",23,null],[11,"with_fetch_min_bytes","","See `KafkaClient::set_fetch_min_bytes`",23,null],[11,"with_fetch_max_bytes_per_partition","","See `KafkaClient::set_fetch_max_bytes_per_partition`",23,null],[11,"with_fetch_crc_validation","","See `KafkaClient::set_fetch_crc_validation`",23,null],[11,"with_offset_storage","","See `KafkaClient::set_group_offset_storage`",23,null],[11,"with_retry_max_bytes_limit","","Specifies the upper bound of data bytes to allow fetching from\na kafka partition when retrying a fetch request due to a too\nbig message in the partition.",23,null],[11,"with_connection_idle_timeout","","Specifies the timeout for idle connections.\nSee `KafkaClient::set_connection_idle_timeout`.",23,null],[11,"create","","Finally creates/builds a new consumer based on the so far\nsupplied settings.",23,null],[17,"DEFAULT_RETRY_MAX_BYTES_LIMIT","","The default value for `Builder::with_retry_max_bytes_limit`.",null,null],[17,"DEFAULT_FALLBACK_OFFSET","","The default value for `Builder::with_fallback_offset`.",null,null],[11,"from_client","","Starts building a consumer using the given kafka client.",24,{"inputs":[{"name":"kafkaclient"}],"output":{"name":"builder"}}],[11,"from_hosts","","Starts building a consumer bootstraping internally a new kafka\nclient from the given kafka hosts.",24,{"inputs":[{"name":"vec"}],"output":{"name":"builder"}}],[11,"client","","Destroys this consumer returning back the underlying kafka client.",24,null],[11,"poll","","Polls for the next available message data.",24,null],[11,"group","","Retrieves the group on which behalf this consumer is acting.\nThe empty group name specifies a group-less consumer.",24,null],[11,"last_consumed_message","","Retrieves the offset of the last &quot;consumed&quot; message in the\nspecified partition. Results in `None` if there is no such\n&quot;consumed&quot; message.",24,null],[11,"consume_message","","Marks the message at the specified offset in the specified\ntopic partition as consumed by the caller.",24,null],[11,"consume_messageset","","A convience method to mark the given message set consumed as a\nwhole by the caller.  This is equivalent to marking the last\nmessage of the given set as consumed.",24,null],[11,"commit_consumed","","Persists the so-far &quot;marked as consumed&quot; messages (on behalf\nof this consumer&#39;s group for the underlying topic - if any.)",24,null],[11,"is_empty","","Determines efficiently whether there are any consumeable\nmessages in this data set.",25,null],[11,"iter","","Iterates over the message sets delivering the fetched message\ndata of consumed topic partitions.",25,null],[11,"topic","","",26,null],[11,"partition","","",26,null],[11,"messages","","",26,null],[11,"next","","",27,null],[0,"producer","kafka","Kafka Producer - A higher-level API for sending messages to Kafka\ntopics.",null,null],[3,"Record","kafka::producer","A structure representing a message to be sent to Kafka through the\n`Producer` API.  Such a message is basically a key/value pair\nspecifying the target topic and optionally the topic&#39;s partition.",null,null],[12,"key","","Key data of this (message) record.",28,null],[12,"value","","Value data of this (message) record.",28,null],[12,"topic","","Name of the topic this message is supposed to be delivered to.",28,null],[12,"partition","","The partition id of the topic to deliver this message to.\nThis partition may be `&lt; 0` in which case it is considered\n&quot;unspecified&quot;.  A `Producer` will then typically try to derive\na partition on its own.",28,null],[3,"Producer","","The Kafka Producer",null,null],[3,"Builder","","A Kafka Producer builder easing the process of setting up various\nconfiguration settings.",null,null],[3,"Topics","","A description of available topics and their available partitions.",null,null],[3,"Partitions","","Producer relevant partition information of a particular topic.",null,null],[3,"DefaultPartitioner","","As its name implies `DefaultPartitioner` is the default\npartitioner for `Producer`.",null,null],[4,"Compression","","Compression types supported by kafka. The numeral values of this\nenumeration correspond to the compression encoding in the\nattributes of a Message in the protocol.",null,null],[13,"NONE","","",8,null],[13,"GZIP","","",8,null],[13,"SNAPPY","","",8,null],[17,"DEFAULT_ACK_TIMEOUT_MILLIS","","The default value for `Builder::with_ack_timeout`.",null,null],[17,"DEFAULT_REQUIRED_ACKS","","The default value for `Builder::with_required_acks`.",null,null],[8,"AsBytes","","A trait used by `Producer` to obtain the bytes `Record::key` and\n`Record::value` represent.  This leaves the choice of the types\nfor `key` and `value` with the client.",null,null],[10,"as_bytes","","",29,null],[8,"Partitioner","","A partitioner is given a chance to choose/redefine a partition for\na message to be sent to Kafka.  See also\n`Record#with_partition`.",null,null],[10,"partition","","Supposed to inspect the given message and if desired re-assign\nthe message&#39;s target partition.",30,null],[11,"as_bytes","collections::string","",31,null],[11,"as_bytes","collections::vec","",32,null],[11,"from_key_value","kafka::producer","Convenience function to create a new key/value record with an\n&quot;unspecified&quot; partition - this is, a partition set to a negative\nvalue.",28,{"inputs":[{"name":"str"},{"name":"k"},{"name":"v"}],"output":{"name":"record"}}],[11,"with_partition","","Convenience method to set the partition.",28,null],[11,"from_value","","Convenience function to create a new value only record with an\n&quot;unspecified&quot; partition - this is, a partition set to a negative\nvalue.",28,{"inputs":[{"name":"str"},{"name":"v"}],"output":{"name":"record"}}],[11,"fmt","","",28,null],[11,"from_client","","Starts building a new producer using the given Kafka client.",33,{"inputs":[{"name":"kafkaclient"}],"output":{"name":"builder"}}],[11,"from_hosts","","Starts building a producer bootstraping internally a new kafka\nclient from the given kafka hosts.",33,{"inputs":[{"name":"vec"}],"output":{"name":"builder"}}],[11,"client","","Destroys this producer returning the underlying kafka client.",33,null],[11,"send","","Synchronously send the specified message to Kafka.",33,null],[11,"send_all","","Synchronously send all of the specified messages to Kafka.",33,null],[11,"with_security","","Specifies the security config to use.\nSee `KafkaClient::new_secure` for more info.",34,null],[11,"with_compression","","Sets the compression algorithm to use when sending out data.",34,null],[11,"with_ack_timeout","","Sets the maximum time the kafka brokers can await the receipt\nof required acknowledgements (which is specified through\n`Builder::with_required_acks`.)  Note that Kafka explicitely\ndocuments this not to be a hard limit.",34,null],[11,"with_connection_idle_timeout","","Specifies the timeout for idle connections.\nSee `KafkaClient::set_connection_idle_timeout`.",34,null],[11,"with_required_acks","","Sets how many acknowledgements the kafka brokers should\nreceive before responding to sent messages.",34,null],[11,"with_partitioner","","Sets the partitioner to dispatch when sending messages without\nan explicit partition assignment.",34,null],[11,"create","","Finally creates/builds a new producer based on the so far\nsupplied settings.",34,null],[11,"available_ids","","Retrieves the list of the identifiers of currently &quot;available&quot;\npartitions for the given topic.  This list excludes partitions\nwhich do not have a leader broker assigned.",35,null],[11,"num_available","","Retrieves the number of &quot;available&quot; partitions. This is a\nmerely a convenience method. See `Partitions::available_ids`.",35,null],[11,"num_all","","The total number of partitions of the underlygin topic.  This\nnumber includes also partitions without a current leader\nassignment.",35,null],[11,"partitions","","Retrieves informationa about a topic&#39;s partitions.",36,null],[11,"default","","",37,{"inputs":[],"output":{"name":"defaultpartitioner"}}],[11,"with_hasher","","Creates a new partitioner which will use the given hash\nbuilder to hash message keys.",37,{"inputs":[{"name":"b"}],"output":{"name":"defaultpartitioner"}}],[11,"with_default_hasher","","",37,{"inputs":[],"output":{"name":"defaultpartitioner"}}],[11,"partition","","",37,null],[11,"fmt","kafka::client","",2,null],[11,"fmt","","",3,null],[11,"correlation_id","kafka::client::fetch","Retrieves the id corresponding to the fetch messages request\n(provided for debugging purposes only).",38,null],[11,"topics","","Provides an iterator over all the topics and the fetched data\nrelative to these topics.",38,null],[11,"topic","","Retrieves the identifier/name of the represented topic.",39,null],[11,"partitions","","Provides an iterator over all the partitions of this topic for\nwhich messages were requested.",39,null],[11,"partition","","Retrieves the identifier of the represented partition.",40,null],[11,"data","","Retrieves the data payload for this partition.",40,null],[11,"highwatermark_offset","","Retrieves the so-called &quot;high water mark offset&quot; indicating\nthe &quot;latest&quot; offset for this partition at the remote broker.\nThis can be used by clients to find out how much behind the\nlatest available message they are.",41,null],[11,"messages","","Retrieves the fetched message data for this partition.",41,null],[11,"fmt","","",21,null],[11,"clone","kafka::client","",8,null],[11,"fmt","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}]],"paths":[[4,"Error"],[4,"KafkaCode"],[3,"PartitionOffset"],[3,"TopicPartitionOffset"],[3,"FetchGroupOffset"],[3,"CommitOffset"],[3,"ProduceMessage"],[3,"FetchPartition"],[4,"Compression"],[4,"FetchOffset"],[4,"GroupOffsetStorage"],[4,"RequiredAcks"],[3,"Topics"],[3,"TopicIter"],[3,"Topic"],[3,"Partitions"],[3,"PartitionIter"],[3,"Partition"],[3,"Broker"],[3,"TopicNames"],[3,"SecurityConfig"],[3,"Message"],[3,"KafkaClient"],[3,"Builder"],[3,"Consumer"],[3,"MessageSets"],[3,"MessageSet"],[3,"MessageSetsIter"],[3,"Record"],[8,"AsBytes"],[8,"Partitioner"],[3,"String"],[3,"Vec"],[3,"Producer"],[3,"Builder"],[3,"Partitions"],[3,"Topics"],[3,"DefaultPartitioner"],[3,"Response"],[3,"Topic"],[3,"Partition"],[3,"Data"]]};
searchIndex["fnv"] = {"doc":"An implementation of the [Fowler–Noll–Vo hash function][chongo].","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",null,null],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"fnvhasher"}}],[11,"with_key","","Create an FNV hasher starting with a state corresponding\nto the hash `key`.",0,{"inputs":[{"name":"u64"}],"output":{"name":"fnvhasher"}}],[11,"finish","","",0,null],[11,"write","","",0,null]],"paths":[[3,"FnvHasher"]]};
searchIndex["openssl"] = {"doc":"","items":[[5,"init","openssl","",null,null],[0,"asn1","","",null,null],[3,"Asn1Time","openssl::asn1","Corresponds to the ASN.1 structure Time defined in RFC5280",null,null],[3,"Asn1TimeRef","","A borrowed Asn1Time",null,null],[11,"from_ptr","","Wraps existing ASN1_TIME and takes ownership",0,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",0,null],[11,"from_ptr","","Creates a new `Asn1TimeRef` wrapping the provided handle.",1,null],[11,"as_ptr","","Returns the raw handle",1,null],[11,"fmt","","",1,null],[11,"drop","","",0,null],[0,"bn","openssl","",null,null],[3,"BigNumRef","openssl::bn","A borrowed, signed, arbitrary-precision integer.",null,null],[3,"BigNum","","An owned, signed, arbitrary-precision integer.",null,null],[4,"RNGProperty","","Specifies the desired properties of a randomly generated `BigNum`.",null,null],[13,"MsbMaybeZero","","The most significant bit of the number is allowed to be 0.",2,null],[13,"MsbOne","","The MSB should be set to 1.",2,null],[13,"TwoMsbOne","","The two most significant bits of the number will be set to 1, so that the product of two\nsuch random numbers will always have `2 * bits` length.",2,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"from_ptr","","",3,null],[11,"checked_sqr","","Returns the square of `self`.",3,null],[11,"checked_nnmod","","Returns the unsigned remainder of the division `self / n`.",3,null],[11,"checked_mod_add","","Equivalent to `(self + a) mod n`.",3,null],[11,"checked_mod_sub","","Equivalent to `(self - a) mod n`.",3,null],[11,"checked_mod_mul","","Equivalent to `(self * a) mod n`.",3,null],[11,"checked_mod_sqr","","Equivalent to `self² mod n`.",3,null],[11,"checked_exp","","Raises `self` to the `p`th power.",3,null],[11,"checked_mod_exp","","Equivalent to `self.checked_exp(p) mod n`.",3,null],[11,"checked_mod_inv","","Calculates the modular multiplicative inverse of `self` modulo `n`, that is, an integer `r`\nsuch that `(self * r) % n == 1`.",3,null],[11,"add_word","","Add an `unsigned long` to `self`. This is more efficient than adding a `BigNum`.",3,null],[11,"sub_word","","",3,null],[11,"mul_word","","",3,null],[11,"div_word","","",3,null],[11,"mod_word","","",3,null],[11,"checked_gcd","","Computes the greatest common denominator of `self` and `a`.",3,null],[11,"is_prime","","Checks whether `self` is prime.",3,null],[11,"is_prime_fast","","Checks whether `self` is prime with optional trial division.",3,null],[11,"checked_rand_in_range","","Generates a cryptographically strong pseudo-random `BigNum` `r` in the range\n`0 &lt;= r &lt; self`.",3,null],[11,"checked_pseudo_rand_in_range","","The cryptographically weak counterpart to `checked_rand_in_range`.",3,null],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 &lt;&lt; n)`.",3,null],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &amp;= ~(1 &lt;&lt; n)`.",3,null],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",3,null],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",3,null],[11,"checked_shl1","","Returns `self`, shifted left by 1 bit. `self` may be negative.",3,null],[11,"checked_shr1","","Returns `self`, shifted right by 1 bit. `self` may be negative.",3,null],[11,"checked_add","","",3,null],[11,"checked_sub","","",3,null],[11,"checked_mul","","",3,null],[11,"checked_div","","",3,null],[11,"checked_mod","","",3,null],[11,"checked_shl","","",3,null],[11,"checked_shr","","",3,null],[11,"to_owned","","",3,null],[11,"negate","","Inverts the sign of `self`.",3,null],[11,"abs_cmp","","Compare the absolute values of `self` and `oth`.",3,null],[11,"is_negative","","",3,null],[11,"num_bits","","Returns the number of significant bits in `self`.",3,null],[11,"num_bytes","","Returns the size of `self` in bytes.",3,null],[11,"as_ptr","","",3,null],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",3,null],[11,"to_dec_str","","Returns a decimal string representation of `self`.",3,null],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",3,null],[11,"new","","Creates a new `BigNum` with the value 0.",4,{"inputs":[],"output":{"name":"result"}}],[11,"new_from","","Creates a new `BigNum` with the given value.",4,{"inputs":[{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_ptr","","",4,null],[11,"new_from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",4,null],[11,"checked_generate_prime","","Generates a prime number.",4,{"inputs":[{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"checked_new_random","","Generates a cryptographically strong pseudo-random `BigNum`.",4,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_pseudo_random","","The cryptographically weak counterpart to `checked_new_random`.",4,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"as_ref","","",4,null],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"partial_cmp","","",3,null],[11,"partial_cmp","","",3,null],[11,"cmp","","",3,null],[11,"partial_cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"cmp","","",4,null],[11,"neg","","",4,null],[0,"crypto","openssl","",null,null],[0,"hash","openssl::crypto","",null,null],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation.",null,null],[4,"Type","","Message digest (hash) type.",null,null],[13,"MD5","","",5,null],[13,"SHA1","","",5,null],[13,"SHA224","","",5,null],[13,"SHA256","","",5,null],[13,"SHA384","","",5,null],[13,"SHA512","","",5,null],[13,"RIPEMD160","","",5,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",5,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",6,{"inputs":[{"name":"type"}],"output":{"name":"result"}}],[11,"update","","Feeds data into the hasher.",6,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6,null],[11,"write","","",6,null],[11,"flush","","",6,null],[11,"clone","","",6,null],[11,"drop","","",6,null],[0,"pkcs5","openssl::crypto","",null,null],[3,"KeyIvPair","openssl::crypto::pkcs5","",null,null],[12,"key","","",7,null],[12,"iv","","",7,null],[5,"evp_bytes_to_key_pbkdf1_compatible","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac_sha1","","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm.",null,null],[11,"fmt","","",7,null],[11,"hash","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[0,"pkcs12","openssl::crypto","PKCS #12 archives.",null,null],[3,"Pkcs12","openssl::crypto::pkcs12","A PKCS #12 archive.",null,null],[3,"ParsedPkcs12","","",null,null],[12,"pkey","","",8,null],[12,"cert","","",8,null],[12,"chain","","",8,null],[11,"drop","","",9,null],[11,"from_der","","Deserializes a `Pkcs12` structure from DER-encoded data.",9,null],[11,"parse","","Extracts the contents of the `Pkcs12`.",9,null],[0,"pkey","openssl::crypto","",null,null],[3,"PKey","openssl::crypto::pkey","",null,null],[11,"from_rsa","","Create a new `PKey` containing an RSA key.",10,{"inputs":[{"name":"rsa"}],"output":{"name":"result"}}],[11,"from_ptr","","",10,null],[11,"private_key_from_pem","","Reads private key from PEM, takes ownership of handle",10,null],[11,"private_key_from_pem_cb","","Read a private key from PEM, supplying a password callback to be invoked if the private key\nis encrypted.",10,null],[11,"public_key_from_pem","","Reads public key from PEM, takes ownership of handle",10,null],[11,"set_rsa","","assign RSA key to this pkey",10,null],[11,"get_rsa","","Get a reference to the interal RSA key for direct access to the key components",10,null],[11,"private_key_to_pem","","Stores private key as a PEM",10,null],[11,"public_key_to_pem","","Stores public key as a PEM",10,null],[11,"as_ptr","","",10,null],[11,"public_eq","","",10,null],[11,"drop","","",10,null],[0,"rand","openssl::crypto","",null,null],[5,"rand_bytes","openssl::crypto::rand","",null,null],[0,"symm","openssl::crypto","",null,null],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",11,null],[13,"Decrypt","","",11,null],[4,"Type","","",null,null],[13,"AES_128_ECB","","",12,null],[13,"AES_128_CBC","","",12,null],[13,"AES_128_CFB1","","",12,null],[13,"AES_128_CFB128","","",12,null],[13,"AES_128_CFB8","","",12,null],[13,"AES_256_ECB","","",12,null],[13,"AES_256_CBC","","",12,null],[13,"AES_256_CFB1","","",12,null],[13,"AES_256_CFB128","","",12,null],[13,"AES_256_CFB8","","",12,null],[13,"DES_CBC","","",12,null],[13,"DES_ECB","","",12,null],[13,"RC4_128","","",12,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"as_ptr","","",12,null],[11,"key_len","","Returns the length of keys used with this cipher.",12,null],[11,"iv_len","","Returns the length of the IV used with this cipher, or `None` if the\ncipher does not use an IV.",12,null],[11,"block_size","","Returns the block size of the cipher.",12,null],[11,"new","","Creates a new `Crypter`.",13,null],[11,"pad","","Enables or disables padding.",13,null],[11,"update","","Feeds data from `input` through the cipher, writing encrypted/decrypted\nbytes into `output`.",13,null],[11,"finalize","","Finishes the encryption/decryption process, writing any remaining data\nto `output`.",13,null],[11,"drop","","",13,null],[0,"memcmp","openssl::crypto","",null,null],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"rsa","openssl::crypto","",null,null],[3,"RSA","openssl::crypto::rsa","",null,null],[11,"drop","","",14,null],[11,"from_public_components","","only useful for associating the key material directly with the key, it&#39;s safer to use\nthe supplied load and save methods for DER formatted keys.",14,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_private_components","","",14,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_ptr","","",14,null],[11,"generate","","Generates a public/private key pair with the specified size.",14,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Reads an RSA private key from PEM formatted data.",14,null],[11,"private_key_from_pem_cb","","Reads an RSA private key from PEM formatted data and supplies a password callback.",14,null],[11,"public_key_from_pem","","Reads an RSA public key from PEM formatted data.",14,null],[11,"private_key_to_pem","","Writes an RSA private key as unencrypted PEM formatted data",14,null],[11,"public_key_to_pem","","Writes an RSA public key as PEM formatted data",14,null],[11,"size","","",14,null],[11,"sign","","",14,null],[11,"verify","","",14,null],[11,"as_ptr","","",14,null],[11,"n","","",14,null],[11,"d","","",14,null],[11,"e","","",14,null],[11,"p","","",14,null],[11,"q","","",14,null],[11,"fmt","","",14,null],[0,"dsa","openssl::crypto","",null,null],[3,"DSAParams","openssl::crypto::dsa","Builder for upfront DSA parameter generateration",null,null],[3,"DSA","","",null,null],[11,"with_size","","",15,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"generate","","Generate a key pair from the initialized parameters",15,null],[11,"drop","","",15,null],[11,"drop","","",16,null],[11,"from_ptr","","",16,null],[11,"generate","","Generate a DSA key pair\nFor more complicated key generation scenarios see the `DSAParams` type",16,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Reads a DSA private key from PEM formatted data.",16,null],[11,"private_key_from_pem_cb","","Read a private key from PEM supplying a password callback to be invoked if the private key\nis encrypted.",16,null],[11,"private_key_to_pem","","Writes an DSA private key as unencrypted PEM formatted data",16,null],[11,"public_key_from_pem","","Reads an DSA public key from PEM formatted data.",16,null],[11,"public_key_to_pem","","Writes an DSA public key as PEM formatted data",16,null],[11,"size","","",16,null],[11,"sign","","",16,null],[11,"verify","","",16,null],[11,"as_ptr","","",16,null],[11,"p","","",16,null],[11,"q","","",16,null],[11,"g","","",16,null],[11,"has_public_key","","",16,null],[11,"has_private_key","","",16,null],[11,"fmt","","",16,null],[0,"dh","openssl","",null,null],[3,"DH","openssl::dh","",null,null],[11,"from_pem","","",17,null],[11,"as_ptr","","",17,null],[11,"drop","","",17,null],[0,"error","openssl","",null,null],[3,"ErrorStack","openssl::error","",null,null],[3,"Error","","An error reported from OpenSSL.",null,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"get","","Returns the contents of the OpenSSL error stack.",18,{"inputs":[],"output":{"name":"errorstack"}}],[11,"errors","","Returns the errors in the stack.",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"from","std::io::error","",19,{"inputs":[{"name":"errorstack"}],"output":{"name":"error"}}],[11,"from","core::fmt","",20,{"inputs":[{"name":"errorstack"}],"output":{"name":"error"}}],[11,"clone","openssl::error","",21,null],[11,"get","","Returns the first error on the OpenSSL error stack.",21,{"inputs":[],"output":{"name":"option"}}],[11,"error_code","","Returns the raw OpenSSL error code for this error.",21,null],[11,"library","","Returns the name of the library reporting the error.",21,null],[11,"function","","Returns the name of the function reporting the error.",21,null],[11,"reason","","Returns the reason for the error.",21,null],[11,"fmt","","",21,null],[11,"fmt","","",21,null],[11,"description","","",21,null],[0,"nid","openssl","",null,null],[4,"Nid","openssl::nid","",null,null],[13,"Undefined","","",22,null],[13,"Rsadsi","","",22,null],[13,"Pkcs","","",22,null],[13,"MD2","","",22,null],[13,"MD4","","",22,null],[13,"MD5","","",22,null],[13,"RC4","","",22,null],[13,"RsaEncryption","","",22,null],[13,"RSA_MD2","","",22,null],[13,"RSA_MD5","","",22,null],[13,"PBE_MD2_DES","","",22,null],[13,"X500","","",22,null],[13,"x509","","",22,null],[13,"CN","","",22,null],[13,"C","","",22,null],[13,"L","","",22,null],[13,"ST","","",22,null],[13,"O","","",22,null],[13,"OU","","",22,null],[13,"RSA","","",22,null],[13,"Pkcs7","","",22,null],[13,"Pkcs7_data","","",22,null],[13,"Pkcs7_signedData","","",22,null],[13,"Pkcs7_envelopedData","","",22,null],[13,"Pkcs7_signedAndEnvelopedData","","",22,null],[13,"Pkcs7_digestData","","",22,null],[13,"Pkcs7_encryptedData","","",22,null],[13,"Pkcs3","","",22,null],[13,"DhKeyAgreement","","",22,null],[13,"DES_ECB","","",22,null],[13,"DES_CFB","","",22,null],[13,"DES_CBC","","",22,null],[13,"DES_EDE","","",22,null],[13,"DES_EDE3","","",22,null],[13,"IDEA_CBC","","",22,null],[13,"IDEA_CFB","","",22,null],[13,"IDEA_ECB","","",22,null],[13,"RC2_CBC","","",22,null],[13,"RC2_ECB","","",22,null],[13,"RC2_CFB","","",22,null],[13,"RC2_OFB","","",22,null],[13,"SHA","","",22,null],[13,"RSA_SHA","","",22,null],[13,"DES_EDE_CBC","","",22,null],[13,"DES_EDE3_CBC","","",22,null],[13,"DES_OFB","","",22,null],[13,"IDEA_OFB","","",22,null],[13,"Pkcs9","","",22,null],[13,"Email","","",22,null],[13,"UnstructuredName","","",22,null],[13,"ContentType","","",22,null],[13,"MessageDigest","","",22,null],[13,"SigningTime","","",22,null],[13,"CounterSignature","","",22,null],[13,"ChallengePassword","","",22,null],[13,"UnstructuredAddress","","",22,null],[13,"ExtendedCertificateAttributes","","",22,null],[13,"Netscape","","",22,null],[13,"NetscapeCertExtention","","",22,null],[13,"NetscapeDatatype","","",22,null],[13,"DES_EDE_CFB64","","",22,null],[13,"DES_EDE3_CFB64","","",22,null],[13,"DES_EDE_OFB64","","",22,null],[13,"DES_EDE3_OFB64","","",22,null],[13,"SHA1","","",22,null],[13,"RSA_SHA1","","",22,null],[13,"DSA_SHA","","",22,null],[13,"DSA_OLD","","",22,null],[13,"PBE_SHA1_RC2_64","","",22,null],[13,"PBKDF2","","",22,null],[13,"DSA_SHA1_OLD","","",22,null],[13,"NetscapeCertType","","",22,null],[13,"NetscapeBaseUrl","","",22,null],[13,"NetscapeRevocationUrl","","",22,null],[13,"NetscapeCARevocationUrl","","",22,null],[13,"NetscapeRenewalUrl","","",22,null],[13,"NetscapeCAPolicyUrl","","",22,null],[13,"NetscapeSSLServerName","","",22,null],[13,"NetscapeComment","","",22,null],[13,"NetscapeCertSequence","","",22,null],[13,"DESX_CBC","","",22,null],[13,"ID_CE","","",22,null],[13,"SubjectKeyIdentifier","","",22,null],[13,"KeyUsage","","",22,null],[13,"PrivateKeyUsagePeriod","","",22,null],[13,"SubjectAltName","","",22,null],[13,"IssuerAltName","","",22,null],[13,"BasicConstraints","","",22,null],[13,"CrlNumber","","",22,null],[13,"CertificatePolicies","","",22,null],[13,"AuthorityKeyIdentifier","","",22,null],[13,"BF_CBC","","",22,null],[13,"BF_ECB","","",22,null],[13,"BF_CFB","","",22,null],[13,"BF_OFB","","",22,null],[13,"MDC2","","",22,null],[13,"RSA_MDC2","","",22,null],[13,"RC4_40","","",22,null],[13,"RC2_40_CBC","","",22,null],[13,"G","","",22,null],[13,"S","","",22,null],[13,"I","","",22,null],[13,"UID","","uniqueIdentifier",22,null],[13,"CrlDistributionPoints","","",22,null],[13,"RSA_NP_MD5","","",22,null],[13,"SN","","",22,null],[13,"T","","",22,null],[13,"D","","",22,null],[13,"CAST5_CBC","","",22,null],[13,"CAST5_ECB","","",22,null],[13,"CAST5_CFB","","",22,null],[13,"CAST5_OFB","","",22,null],[13,"PbeWithMD5AndCast5CBC","","",22,null],[13,"DSA_SHA1","","",22,null],[13,"MD5_SHA1","","",22,null],[13,"RSA_SHA1_2","","",22,null],[13,"DSA","","",22,null],[13,"RIPEMD160","","",22,null],[13,"RSA_RIPEMD160","","",22,null],[13,"RC5_CBC","","",22,null],[13,"RC5_ECB","","",22,null],[13,"RC5_CFB","","",22,null],[13,"RC5_OFB","","",22,null],[13,"RLE","","",22,null],[13,"ZLIB","","",22,null],[13,"ExtendedKeyUsage","","",22,null],[13,"PKIX","","",22,null],[13,"ID_KP","","",22,null],[13,"ServerAuth","","",22,null],[13,"ClientAuth","","",22,null],[13,"CodeSigning","","",22,null],[13,"EmailProtection","","",22,null],[13,"TimeStamping","","",22,null],[13,"MsCodeInd","","",22,null],[13,"MsCodeCom","","",22,null],[13,"MsCtlSigh","","",22,null],[13,"MsSGC","","",22,null],[13,"MsEFS","","",22,null],[13,"NsSGC","","",22,null],[13,"DeltaCRL","","",22,null],[13,"CRLReason","","",22,null],[13,"InvalidityDate","","",22,null],[13,"SXNetID","","",22,null],[13,"PBE_SHA1_RC4_128","","",22,null],[13,"PBE_SHA1_RC4_40","","",22,null],[13,"PBE_SHA1_3DES","","",22,null],[13,"PBE_SHA1_2DES","","",22,null],[13,"PBE_SHA1_RC2_128","","",22,null],[13,"PBE_SHA1_RC2_40","","",22,null],[13,"KeyBag","","",22,null],[13,"Pkcs8ShroudedKeyBag","","",22,null],[13,"CertBag","","",22,null],[13,"CrlBag","","",22,null],[13,"SecretBag","","",22,null],[13,"SafeContentsBag","","",22,null],[13,"FriendlyName","","",22,null],[13,"LocalKeyID","","",22,null],[13,"X509Certificate","","",22,null],[13,"SdsiCertificate","","",22,null],[13,"X509Crl","","",22,null],[13,"PBES2","","",22,null],[13,"PBMAC1","","",22,null],[13,"HmacWithSha1","","",22,null],[13,"ID_QT_CPS","","",22,null],[13,"ID_QT_UNOTICE","","",22,null],[13,"RC2_64_CBC","","",22,null],[13,"SMIMECaps","","",22,null],[13,"PBE_MD2_RC2_64","","",22,null],[13,"PBE_MD5_RC2_64","","",22,null],[13,"PBE_SHA1_DES","","",22,null],[13,"MicrosoftExtensionRequest","","",22,null],[13,"ExtensionRequest","","",22,null],[13,"Name","","",22,null],[13,"DnQualifier","","",22,null],[13,"IdPe","","",22,null],[13,"IdAd","","",22,null],[13,"AuthorityInfoAccess","","",22,null],[13,"OCSP","","",22,null],[13,"CaIssuers","","",22,null],[13,"OCSPSigning","","",22,null],[13,"UserId","","Shown as UID in cert subject",22,null],[13,"SHA256","","",22,null],[13,"SHA384","","",22,null],[13,"SHA512","","",22,null],[13,"SHA224","","",22,null],[11,"eq","","",22,null],[11,"hash","","",22,null],[11,"clone","","",22,null],[0,"ssl","openssl","",null,null],[3,"SslContextOptions","openssl::ssl","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContextRef","","A borrowed SSL context object.",null,null],[3,"SslContext","","An owned SSL context object.",null,null],[3,"CipherBits","","",null,null],[12,"secret","","The number of secret bits used for the cipher.",23,null],[12,"algorithm","","The number of bits processed by the chosen algorithm, if not None.",23,null],[3,"SslCipher","","",null,null],[3,"SslRef","","",null,null],[3,"Ssl","","",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",24,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",24,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",24,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",24,null],[13,"Stream","","An error reported by the underlying stream.",24,null],[13,"Ssl","","An error in the OpenSSL library.",24,null],[4,"SslMethod","","Determines the SSL method supported",null,null],[13,"Sslv23","","Support the SSLv2, SSLv3, TLSv1, TLSv1.1, and TLSv1.2 protocols depending on what the\nlinked OpenSSL library supports.",25,null],[13,"Tlsv1","","Only support the TLSv1 protocol.",25,null],[4,"SniError","","An error returned from an SNI callback.",null,null],[13,"Fatal","","",26,null],[13,"Warning","","",26,null],[13,"NoAck","","",26,null],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",null,null],[13,"Failure","","The handshake failed.",27,null],[13,"Interrupted","","The handshake was interrupted midway through.",27,null],[0,"error","","",null,null],[4,"Error","openssl::ssl::error","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",24,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",24,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",24,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",24,null],[13,"Stream","","An error reported by the underlying stream.",24,null],[13,"Ssl","","An error in the OpenSSL library.",24,null],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"description","","",24,null],[11,"cause","","",24,null],[11,"from","","",24,{"inputs":[{"name":"errorstack"}],"output":{"name":"error"}}],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","openssl::ssl","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_VERIFY_PEER","","Verify that the server&#39;s certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","Do not verify the server&#39;s certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate.\nUse together with SSL_VERIFY_PEER.",null,null],[8,"IntoSsl","","",null,null],[10,"into_ssl","","",28,null],[11,"hash","","",29,null],[11,"cmp","","",29,null],[11,"partial_cmp","","",29,null],[11,"lt","","",29,null],[11,"le","","",29,null],[11,"gt","","",29,null],[11,"ge","","",29,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"c_long"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"c_long"}],"output":{"name":"sslcontextoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,null],[11,"is_all","","Returns `true` if all flags are currently set.",29,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,null],[11,"insert","","Inserts the specified flags in-place.",29,null],[11,"remove","","Removes the specified flags in-place.",29,null],[11,"toggle","","Toggles the specified flags in-place.",29,null],[11,"bitor","","Returns the union of the two sets of flags.",29,null],[11,"bitor_assign","","Adds the set of flags.",29,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,null],[11,"bitxor_assign","","Toggles the set of flags.",29,null],[11,"bitand","","Returns the intersection between the two sets of flags.",29,null],[11,"bitand_assign","","Disables all flags disabled in the set.",29,null],[11,"sub","","Returns the set difference of the two sets of flags.",29,null],[11,"sub_assign","","Disables all flags enabled in the set.",29,null],[11,"not","","Returns the complement of this set of flags.",29,null],[11,"extend","","",29,null],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"sslcontextoptions"}}],[11,"eq","","",25,null],[11,"hash","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"hash","","",30,null],[11,"cmp","","",30,null],[11,"partial_cmp","","",30,null],[11,"lt","","",30,null],[11,"le","","",30,null],[11,"gt","","",30,null],[11,"ge","","",30,null],[11,"clone","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,null],[11,"is_all","","Returns `true` if all flags are currently set.",30,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,null],[11,"insert","","Inserts the specified flags in-place.",30,null],[11,"remove","","Removes the specified flags in-place.",30,null],[11,"toggle","","Toggles the specified flags in-place.",30,null],[11,"bitor","","Returns the union of the two sets of flags.",30,null],[11,"bitor_assign","","Adds the set of flags.",30,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,null],[11,"bitxor_assign","","Toggles the set of flags.",30,null],[11,"bitand","","Returns the intersection between the two sets of flags.",30,null],[11,"bitand_assign","","Disables all flags disabled in the set.",30,null],[11,"sub","","Returns the set difference of the two sets of flags.",30,null],[11,"sub_assign","","Disables all flags enabled in the set.",30,null],[11,"not","","Returns the complement of this set of flags.",30,null],[11,"extend","","",30,null],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",31,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",31,null],[11,"try_lock","","Attempts to acquire this lock.",31,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",31,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",31,null],[11,"from","alloc::boxed","",32,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",32,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",32,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",32,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",32,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",32,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",33,null],[11,"description","","",34,null],[11,"description","core::num","",35,null],[11,"description","","",36,null],[11,"description","core::num::dec2flt","",37,null],[11,"description","collections::string","",38,null],[11,"description","","",39,null],[11,"description","","",40,null],[11,"description","rustc_unicode::char","",41,null],[11,"description","alloc::boxed","",32,null],[11,"cause","","",32,null],[11,"description","core::fmt","",20,null],[11,"is","openssl","Returns true if the boxed type is the same as `T`",42,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",42,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",42,null],[11,"is","","Forwards to the method defined on the type `Any`.",42,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",42,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",42,null],[11,"is","","Forwards to the method defined on the type `Any`.",42,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",42,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",42,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",42,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",42,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",42,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"clone","std::thread::local","",44,null],[11,"eq","","",44,null],[11,"with","","Acquires a reference to the value in this TLS key.",45,null],[11,"state","","Query the current state of this key.",45,null],[11,"new","std::thread::local::elf","",46,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",46,null],[11,"new","std::thread::local::os","",47,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",47,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",48,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",48,null],[11,"stack_size","","Sets the size of the stack for the new thread.",48,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",48,null],[11,"clone","","",49,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",49,null],[11,"name","","Gets the thread&#39;s name.",49,null],[11,"fmt","","",49,null],[11,"thread","","Extracts a handle to the underlying thread",50,null],[11,"join","","Waits for the associated thread to finish.",50,null],[11,"clone","std::collections::hash::map","",51,null],[11,"new","","Creates an empty HashMap.",51,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",51,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",51,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",51,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",51,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",51,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",51,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",51,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",51,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",51,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",51,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",51,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",51,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",51,null],[11,"len","","Returns the number of elements in the map.",51,null],[11,"is_empty","","Returns true if the map contains no elements.",51,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",51,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",51,null],[11,"get","","Returns a reference to the value corresponding to the key.",51,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",51,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",51,null],[11,"insert","","Inserts a key-value pair into the map.",51,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",51,null],[11,"eq","","",51,null],[11,"fmt","","",51,null],[11,"default","","",51,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",51,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"len","","",52,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"len","","",55,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"len","","",56,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"len","","",53,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"len","","",54,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"len","","",57,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"len","","",58,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",59,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",59,null],[11,"key","","Returns a reference to this entry&#39;s key.",59,null],[11,"key","","Gets a reference to the key in the entry.",60,null],[11,"remove_pair","","Take the ownership of the key and value from the map.",60,null],[11,"get","","Gets a reference to the value in the entry.",60,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",60,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",60,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",60,null],[11,"remove","","Takes the value out of the entry, and returns it",60,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",61,null],[11,"into_key","","Take ownership of the key.",61,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",61,null],[11,"from_iter","","",51,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",51,null],[11,"extend","","",51,null],[11,"clone","","",62,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",62,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",62,null],[11,"write","","",63,null],[11,"finish","","",63,null],[11,"default","","",62,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",64,null],[11,"new","","Creates an empty HashSet.",64,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",64,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",64,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",64,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",64,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",64,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",64,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",64,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",64,null],[11,"difference","","Visit the values representing the difference.",64,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",64,null],[11,"intersection","","Visit the values representing the intersection.",64,null],[11,"union","","Visit the values representing the union.",64,null],[11,"len","","Returns the number of elements in the set.",64,null],[11,"is_empty","","Returns true if the set contains no elements.",64,null],[11,"drain","","Clears the set, returning all elements in an iterator.",64,null],[11,"clear","","Clears the set, removing all values.",64,null],[11,"contains","","Returns `true` if the set contains a value.",64,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",64,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",64,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",64,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",64,null],[11,"insert","","Adds a value to the set.",64,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",64,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",64,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",64,null],[11,"eq","","",64,null],[11,"fmt","","",64,null],[11,"from_iter","","",64,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",64,null],[11,"extend","","",64,null],[11,"default","","",64,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",64,null],[11,"clone","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"len","","",65,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"len","","",66,null],[11,"next","","",67,null],[11,"size_hint","","",67,null],[11,"len","","",67,null],[11,"clone","","",68,null],[11,"next","","",68,null],[11,"size_hint","","",68,null],[11,"clone","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"clone","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"clone","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"drop","collections::binary_heap","",72,null],[11,"deref","","",72,null],[11,"deref_mut","","",72,null],[11,"clone","","",73,null],[11,"clone_from","","",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",73,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",73,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",73,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",73,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",73,null],[11,"peek_mut","","Returns a mutable reference to the greatest item in the binary heap, or\n`None` if it is empty.",73,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",73,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",73,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",73,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",73,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",73,null],[11,"push","","Pushes an item onto the binary heap.",73,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",73,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",73,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",73,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",73,null],[11,"len","","Returns the length of the binary heap.",73,null],[11,"is_empty","","Checks if the binary heap is empty.",73,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",73,null],[11,"clear","","Drops all items from the binary heap.",73,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",73,null],[11,"clone","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"clone","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next_back","","",76,null],[11,"from","","",73,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",77,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",73,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",73,null],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"clone","collections::vec_deque","",78,null],[11,"drop","","",78,null],[11,"default","","",78,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",78,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",78,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",78,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",78,null],[11,"swap","","Swaps elements at indices `i` and `j`.",78,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",78,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",78,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",78,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",78,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",78,null],[11,"iter","","Returns a front-to-back iterator.",78,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",78,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",78,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",78,null],[11,"len","","Returns the number of elements in the `VecDeque`.",78,null],[11,"is_empty","","Returns true if the buffer contains no elements",78,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",78,null],[11,"clear","","Clears the buffer, removing all values.",78,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",78,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",78,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",78,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",78,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",78,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",78,null],[11,"push_front","","Inserts an element first in the sequence.",78,null],[11,"push_back","","Appends an element to the back of a buffer",78,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",78,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",78,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",78,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",78,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",78,null],[11,"split_off","","Splits the collection into two at the given index.",78,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",78,null],[11,"retain","","Retains only the elements specified by the predicate.",78,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",78,null],[11,"clone","","",79,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"next_back","","",79,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"next_back","","",80,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"next_back","","",81,null],[11,"drop","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"next_back","","",82,null],[11,"eq","","",78,null],[11,"partial_cmp","","",78,null],[11,"cmp","","",78,null],[11,"hash","","",78,null],[11,"index","","",78,null],[11,"index_mut","","",78,null],[11,"from_iter","","",78,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",78,null],[11,"extend","","",78,null],[11,"extend","","",78,null],[11,"fmt","","",78,null],[11,"from","","",78,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",77,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::linked_list","",83,null],[11,"clone","","",84,null],[11,"default","","",85,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",85,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",85,null],[11,"iter","","Provides a forward iterator.",85,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",85,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",85,null],[11,"len","","Returns the length of the `LinkedList`.",85,null],[11,"clear","","Removes all elements from the `LinkedList`.",85,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",85,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",85,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",85,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",85,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",85,null],[11,"push_front","","Adds an element first in the list.",85,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",85,null],[11,"push_back","","Appends an element to the back of a list",85,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",85,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",85,null],[11,"front_place","","Returns a place for insertion at the front of the list.",85,null],[11,"back_place","","Returns a place for insertion at the back of the list.",85,null],[11,"drop","","",85,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"next_back","","",83,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"next_back","","",86,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",86,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",86,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"next_back","","",84,null],[11,"from_iter","","",85,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",85,null],[11,"extend","","",85,null],[11,"extend","","",85,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"partial_cmp","","",85,null],[11,"cmp","","",85,null],[11,"clone","","",85,null],[11,"fmt","","",85,null],[11,"hash","","",85,null],[11,"make_place","","",87,null],[11,"pointer","","",87,null],[11,"finalize","","",87,null],[11,"make_place","","",88,null],[11,"pointer","","",88,null],[11,"finalize","","",88,null],[11,"next","std::env","",89,null],[11,"size_hint","","",89,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"clone","","",91,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"fmt","","",91,null],[11,"fmt","","",91,null],[11,"description","","",91,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"fmt","","",93,null],[11,"fmt","","",93,null],[11,"description","","",93,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"len","","",94,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"len","","",95,null],[11,"clone","std::ffi::c_str","",96,null],[11,"hash","","",96,null],[11,"cmp","","",96,null],[11,"partial_cmp","","",96,null],[11,"lt","","",96,null],[11,"le","","",96,null],[11,"gt","","",96,null],[11,"ge","","",96,null],[11,"eq","","",96,null],[11,"ne","","",96,null],[11,"hash","","",97,null],[11,"fmt","","",98,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"eq","","",99,null],[11,"ne","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"clone","","",100,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",96,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",96,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",96,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",96,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",96,null],[11,"into_bytes","","Returns the underlying byte buffer.",96,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",96,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",96,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",96,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",97,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",97,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",97,null],[11,"as_ptr","","Returns the inner pointer to this C string.",97,null],[11,"to_bytes","","Converts this C string to a byte slice.",97,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",97,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",97,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",97,null],[11,"deref","","",96,null],[11,"fmt","","",96,null],[11,"from","collections::vec","",77,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",97,null],[11,"default","","",96,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",96,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",98,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",98,null],[11,"description","","",98,null],[11,"fmt","","",98,null],[11,"from","std::io::error","",19,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",100,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",100,null],[11,"description","","",100,null],[11,"cause","","",100,null],[11,"fmt","","",100,null],[11,"eq","","",97,null],[11,"partial_cmp","","",97,null],[11,"cmp","","",97,null],[11,"to_owned","","",97,null],[11,"from","","",96,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",96,null],[11,"as_ref","","",97,null],[11,"as_ref","","",96,null],[11,"clone","std::ffi::os_str","",101,null],[11,"new","","Constructs a new empty `OsString`.",101,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",101,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",101,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",101,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",101,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",101,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",101,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",101,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",101,null],[11,"from","","",101,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",101,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",101,null],[11,"new","","Coerces into an `OsStr` slice.",102,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",102,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",102,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",102,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",102,null],[11,"len","","Returns the length of this `OsStr`.",102,null],[11,"deref","","",101,null],[11,"default","","",101,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",101,null],[11,"eq","","",101,null],[11,"eq","","",101,null],[11,"partial_cmp","","",101,null],[11,"lt","","",101,null],[11,"le","","",101,null],[11,"gt","","",101,null],[11,"ge","","",101,null],[11,"partial_cmp","","",101,null],[11,"cmp","","",101,null],[11,"hash","","",101,null],[11,"eq","","",102,null],[11,"eq","","",102,null],[11,"partial_cmp","","",102,null],[11,"lt","","",102,null],[11,"le","","",102,null],[11,"gt","","",102,null],[11,"ge","","",102,null],[11,"partial_cmp","","",102,null],[11,"cmp","","",102,null],[11,"eq","","",101,null],[11,"eq","","",102,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",102,null],[11,"eq","","",101,null],[11,"partial_cmp","","",101,null],[11,"eq","collections::borrow","",103,null],[11,"eq","std::ffi::os_str","",102,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"partial_cmp","std::ffi::os_str","",102,null],[11,"eq","collections::borrow","",103,null],[11,"partial_cmp","","",103,null],[11,"eq","","",103,null],[11,"eq","std::ffi::os_str","",101,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"partial_cmp","std::ffi::os_str","",101,null],[11,"hash","","",102,null],[11,"fmt","","",102,null],[11,"borrow","","",101,null],[11,"to_owned","","",102,null],[11,"as_ref","","",102,null],[11,"as_ref","","",101,null],[11,"as_ref","collections::string","",104,null],[11,"clone","std::fs","",105,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"hash","","",108,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"clone","","",108,null],[11,"open","","Attempts to open a file in read-only mode.",109,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",109,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",109,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",109,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",109,null],[11,"metadata","","Queries metadata about the underlying file.",109,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",109,null],[11,"fmt","","",109,null],[11,"read","","",109,null],[11,"read_to_end","","",109,null],[11,"write","","",109,null],[11,"flush","","",109,null],[11,"seek","","",109,null],[11,"new","","Creates a blank new set of options ready for configuration.",106,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",106,null],[11,"write","","Sets the option for write access.",106,null],[11,"append","","Sets the option for the append mode.",106,null],[11,"truncate","","Sets the option for truncating a previous file.",106,null],[11,"create","","Sets the option for creating a new file.",106,null],[11,"create_new","","Sets the option to always create a new file.",106,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",106,null],[11,"file_type","","Returns the file type for this metadata.",105,null],[11,"is_dir","","Returns whether this metadata is for a directory.",105,null],[11,"is_file","","Returns whether this metadata is for a regular file.",105,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",105,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",105,null],[11,"modified","","Returns the last modification time listed in this metadata.",105,null],[11,"accessed","","Returns the last access time of this metadata.",105,null],[11,"created","","Returns the creation time listed in the this metadata.",105,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",107,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",107,null],[11,"is_dir","","Test whether this file type represents a directory.",108,null],[11,"is_file","","Test whether this file type represents a regular file.",108,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",108,null],[11,"next","","",110,null],[11,"path","","Returns the full path to the file that this entry represents.",111,null],[11,"metadata","","Return the metadata for the file that this entry points at.",111,null],[11,"file_type","","Return the file type for the file that this entry points at.",111,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",111,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",112,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",112,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",112,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",113,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",113,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",113,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",113,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",113,null],[11,"read","","",113,null],[11,"fill_buf","","",113,null],[11,"consume","","",113,null],[11,"fmt","","",113,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",113,null],[11,"fmt","","",114,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",115,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",115,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",115,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",115,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",115,null],[11,"write","","",115,null],[11,"flush","","",115,null],[11,"fmt","","",115,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",115,null],[11,"drop","","",115,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",114,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",114,null],[11,"from","std::io::error","",19,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",114,null],[11,"fmt","","",114,null],[11,"new","","Creates a new `LineWriter`.",116,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",116,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",116,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",116,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",116,null],[11,"write","","",116,null],[11,"flush","","",116,null],[11,"fmt","","",116,null],[11,"fmt","std::io::cursor","",117,null],[11,"clone","","",117,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",117,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",117,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",117,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",117,null],[11,"position","","Returns the current position of this cursor.",117,null],[11,"set_position","","Sets the position of this cursor.",117,null],[11,"seek","","",117,null],[11,"read","","",117,null],[11,"fill_buf","","",117,null],[11,"consume","","",117,null],[11,"write","","",117,null],[11,"flush","","",117,null],[11,"write","","",117,null],[11,"flush","","",117,null],[11,"write","","",117,null],[11,"flush","","",117,null],[11,"fmt","std::io::error","",19,null],[11,"fmt","","",118,null],[11,"clone","","",118,null],[11,"eq","","",118,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",19,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",19,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",19,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",19,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",19,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",19,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",19,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",19,null],[11,"fmt","","",19,null],[11,"description","","",19,null],[11,"cause","","",19,null],[11,"read","alloc::boxed","",32,null],[11,"read_to_end","","",32,null],[11,"read_to_string","","",32,null],[11,"read_exact","","",32,null],[11,"write","","",32,null],[11,"flush","","",32,null],[11,"write_all","","",32,null],[11,"write_fmt","","",32,null],[11,"seek","","",32,null],[11,"fill_buf","","",32,null],[11,"consume","","",32,null],[11,"read_until","","",32,null],[11,"read_line","","",32,null],[11,"write","collections::vec","",77,null],[11,"write_all","","",77,null],[11,"flush","","",77,null],[11,"read","std::io::util","",119,null],[11,"fill_buf","","",119,null],[11,"consume","","",119,null],[11,"read","","",120,null],[11,"write","","",121,null],[11,"flush","","",121,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",122,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",122,null],[11,"read","","",122,null],[11,"read_to_end","","",122,null],[11,"read_to_string","","",122,null],[11,"read_exact","","",122,null],[11,"read","","",123,null],[11,"read_to_end","","",123,null],[11,"fill_buf","","",123,null],[11,"consume","","",123,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",124,null],[11,"write","","",124,null],[11,"flush","","",124,null],[11,"write_all","","",124,null],[11,"write_fmt","","",124,null],[11,"write","","",125,null],[11,"flush","","",125,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",126,null],[11,"write","","",126,null],[11,"flush","","",126,null],[11,"write_all","","",126,null],[11,"write_fmt","","",126,null],[11,"write","","",127,null],[11,"flush","","",127,null],[11,"fmt","std::io","",128,null],[11,"clone","","",128,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"read","","",129,null],[11,"fill_buf","","",129,null],[11,"consume","","",129,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",130,null],[11,"read","","",130,null],[11,"fill_buf","","",130,null],[11,"consume","","",130,null],[11,"next","","",131,null],[11,"fmt","","",132,null],[11,"next","","",133,null],[11,"description","","",132,null],[11,"cause","","",132,null],[11,"fmt","","",132,null],[11,"next","","",134,null],[11,"next","","",135,null],[11,"cmp","std::net::ip","",136,null],[11,"partial_cmp","","",136,null],[11,"lt","","",136,null],[11,"le","","",136,null],[11,"gt","","",136,null],[11,"ge","","",136,null],[11,"hash","","",136,null],[11,"fmt","","",136,null],[11,"eq","","",136,null],[11,"ne","","",136,null],[11,"clone","","",136,null],[11,"fmt","","",137,null],[11,"hash","","",137,null],[11,"clone","","",137,null],[11,"eq","","",137,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",138,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",138,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (0.0.0.0).",138,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",138,null],[11,"is_private","","Returns true if this is a private address.",138,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",138,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",138,null],[11,"is_multicast","","Returns true if this is a multicast address (224.0.0.0/4).",138,null],[11,"is_broadcast","","Returns true if this is a broadcast address (255.255.255.255).",138,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",138,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",138,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",138,null],[11,"fmt","","",136,null],[11,"fmt","","",138,null],[11,"fmt","","",138,null],[11,"clone","","",138,null],[11,"eq","","",138,null],[11,"hash","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"from","","",138,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",138,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",139,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",139,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address (::).",139,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",139,null],[11,"is_global","","Returns true if the address appears to be globally routable.",139,null],[11,"is_unique_local","","Returns true if this is a unique local address (fc00::/7).",139,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",139,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address\n(fec0::/10).",139,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\n(2001:db8::/32).",139,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",139,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",139,null],[11,"is_multicast","","Returns true if this is a multicast address (ff00::/8).",139,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",139,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",139,null],[11,"fmt","","",139,null],[11,"fmt","","",139,null],[11,"clone","","",139,null],[11,"eq","","",139,null],[11,"hash","","",139,null],[11,"partial_cmp","","",139,null],[11,"cmp","","",139,null],[11,"from","","",139,null],[11,"fmt","std::net::addr","",140,null],[11,"hash","","",140,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",140,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",140,null],[11,"set_ip","","Change the IP address associated with this socket address.",140,null],[11,"port","","Returns the port number associated with this socket address.",140,null],[11,"set_port","","Change the port number associated with this socket address.",140,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",141,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",141,null],[11,"set_ip","","Change the IP address associated with this socket address.",141,null],[11,"port","","Returns the port number associated with this socket address.",141,null],[11,"set_port","","Change the port number associated with this socket address.",141,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",142,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",142,null],[11,"set_ip","","Change the IP address associated with this socket address.",142,null],[11,"port","","Returns the port number associated with this socket address.",142,null],[11,"set_port","","Change the port number associated with this socket address.",142,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",142,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",142,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",142,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",142,null],[11,"fmt","","",140,null],[11,"fmt","","",141,null],[11,"fmt","","",141,null],[11,"fmt","","",142,null],[11,"fmt","","",142,null],[11,"clone","","",141,null],[11,"clone","","",142,null],[11,"eq","","",141,null],[11,"eq","","",142,null],[11,"hash","","",141,null],[11,"hash","","",142,null],[11,"to_socket_addrs","","",140,null],[11,"to_socket_addrs","","",141,null],[11,"to_socket_addrs","","",142,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",143,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",143,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",143,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",143,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",143,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",143,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",143,null],[11,"read_timeout","","Returns the read timeout of this socket.",143,null],[11,"write_timeout","","Returns the write timeout of this socket.",143,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",143,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",143,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",143,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",143,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",143,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",143,null],[11,"read","","",143,null],[11,"read_to_end","","",143,null],[11,"write","","",143,null],[11,"flush","","",143,null],[11,"fmt","","",143,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",144,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",144,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",144,null],[11,"accept","","Accept a new incoming connection from this listener.",144,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",144,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",144,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",144,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",144,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",144,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",144,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",144,null],[11,"next","","",145,null],[11,"fmt","","",144,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",146,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",146,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",146,null],[11,"local_addr","","Returns the socket address that this socket was created from.",146,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",146,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",146,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",146,null],[11,"read_timeout","","Returns the read timeout of this socket.",146,null],[11,"write_timeout","","Returns the write timeout of this socket.",146,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",146,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",146,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",146,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",146,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",146,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",146,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",146,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",146,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",146,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",146,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",146,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",146,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",146,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",146,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",146,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",146,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",146,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",146,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",146,null],[11,"fmt","","",146,null],[11,"from_str","std::net::ip","",136,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",138,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",139,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",141,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",142,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",140,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",147,null],[11,"ne","","",147,null],[11,"clone","","",147,null],[11,"fmt","","",147,null],[11,"fmt","","",147,null],[11,"description","","",147,null],[11,"fmt","std::net","",148,null],[11,"eq","","",148,null],[11,"clone","","",148,null],[11,"next","","",149,null],[11,"clone","std::os::linux::raw::arch","",150,null],[11,"as_raw_stat","std::fs","",105,null],[11,"st_dev","","",105,null],[11,"st_ino","","",105,null],[11,"st_mode","","",105,null],[11,"st_nlink","","",105,null],[11,"st_uid","","",105,null],[11,"st_gid","","",105,null],[11,"st_rdev","","",105,null],[11,"st_size","","",105,null],[11,"st_atime","","",105,null],[11,"st_atime_nsec","","",105,null],[11,"st_mtime","","",105,null],[11,"st_mtime_nsec","","",105,null],[11,"st_ctime","","",105,null],[11,"st_ctime_nsec","","",105,null],[11,"st_blksize","","",105,null],[11,"st_blocks","","",105,null],[11,"as_raw_fd","","",109,null],[11,"from_raw_fd","","",109,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",109,null],[11,"as_raw_fd","std::net::tcp","",143,null],[11,"as_raw_fd","","",144,null],[11,"as_raw_fd","std::net::udp","",146,null],[11,"from_raw_fd","std::net::tcp","",143,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",144,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",146,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",143,null],[11,"into_raw_fd","","",144,null],[11,"into_raw_fd","std::net::udp","",146,null],[11,"from_vec","std::ffi::os_str","",101,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",101,null],[11,"from_bytes","","",102,null],[11,"as_bytes","","",102,null],[11,"mode","std::fs","",107,null],[11,"set_mode","","",107,null],[11,"from_mode","","",107,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",106,null],[11,"custom_flags","","",106,null],[11,"dev","","",105,null],[11,"ino","","",105,null],[11,"mode","","",105,null],[11,"nlink","","",105,null],[11,"uid","","",105,null],[11,"gid","","",105,null],[11,"rdev","","",105,null],[11,"size","","",105,null],[11,"atime","","",105,null],[11,"atime_nsec","","",105,null],[11,"mtime","","",105,null],[11,"mtime_nsec","","",105,null],[11,"ctime","","",105,null],[11,"ctime_nsec","","",105,null],[11,"blksize","","",105,null],[11,"blocks","","",105,null],[11,"is_block_device","","",108,null],[11,"is_char_device","","",108,null],[11,"is_fifo","","",108,null],[11,"is_socket","","",108,null],[11,"ino","","",111,null],[11,"mode","","",112,null],[11,"uid","std::process","",151,null],[11,"gid","","",151,null],[11,"before_exec","","",151,null],[11,"exec","","",151,null],[11,"from_raw","","",152,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",152,null],[11,"from_raw_fd","","",153,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",154,null],[11,"as_raw_fd","","",155,null],[11,"as_raw_fd","","",156,null],[11,"into_raw_fd","","",154,null],[11,"into_raw_fd","","",155,null],[11,"into_raw_fd","","",156,null],[11,"as_pthread_t","std::thread","",50,null],[11,"into_pthread_t","","",50,null],[11,"clone","std::sys::ext::net","",157,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",157,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",157,null],[11,"fmt","","",157,null],[11,"fmt","","",158,null],[11,"connect","","Connects to the socket named by `path`.",158,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",158,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",158,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",158,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",158,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",158,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",158,null],[11,"read_timeout","","Returns the read timeout of this socket.",158,null],[11,"write_timeout","","Returns the write timeout of this socket.",158,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",158,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",158,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",158,null],[11,"read","","",158,null],[11,"read_to_end","","",158,null],[11,"write","","",158,null],[11,"flush","","",158,null],[11,"as_raw_fd","","",158,null],[11,"from_raw_fd","","",158,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",158,null],[11,"fmt","","",159,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",159,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",159,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",159,null],[11,"local_addr","","Returns the local socket address of this listener.",159,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",159,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",159,null],[11,"incoming","","Returns an iterator over incoming connections.",159,null],[11,"as_raw_fd","","",159,null],[11,"from_raw_fd","","",159,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",159,null],[11,"fmt","","",160,null],[11,"next","","",160,null],[11,"size_hint","","",160,null],[11,"fmt","","",161,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",161,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",161,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",161,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",161,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",161,null],[11,"local_addr","","Returns the address of this socket.",161,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",161,null],[11,"recv_from","","Receives data from the socket.",161,null],[11,"recv","","Receives data from the socket.",161,null],[11,"send_to","","Sends data on the socket to the specified address.",161,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",161,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",161,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",161,null],[11,"read_timeout","","Returns the read timeout of this socket.",161,null],[11,"write_timeout","","Returns the write timeout of this socket.",161,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",161,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",161,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",161,null],[11,"as_raw_fd","","",161,null],[11,"from_raw_fd","","",161,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",161,null],[11,"deref","std::panic","",162,null],[11,"deref_mut","","",162,null],[11,"call_once","","",162,null],[11,"eq","std::path","",163,null],[11,"ne","","",163,null],[11,"cmp","","",163,null],[11,"partial_cmp","","",163,null],[11,"lt","","",163,null],[11,"le","","",163,null],[11,"gt","","",163,null],[11,"ge","","",163,null],[11,"hash","","",163,null],[11,"fmt","","",163,null],[11,"clone","","",163,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",163,null],[11,"fmt","","",164,null],[11,"clone","","",164,null],[11,"kind","","The parsed prefix data.",164,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",164,null],[11,"eq","","",164,null],[11,"partial_cmp","","",164,null],[11,"cmp","","",164,null],[11,"hash","","",164,null],[11,"fmt","","",165,null],[11,"hash","","",165,null],[11,"cmp","","",165,null],[11,"partial_cmp","","",165,null],[11,"lt","","",165,null],[11,"le","","",165,null],[11,"gt","","",165,null],[11,"ge","","",165,null],[11,"eq","","",165,null],[11,"ne","","",165,null],[11,"clone","","",165,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",165,null],[11,"as_ref","","",165,null],[11,"clone","","",166,null],[11,"clone","","",167,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",166,null],[11,"as_ref","","",166,null],[11,"as_ref","","",166,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",167,null],[11,"as_ref","","",167,null],[11,"as_ref","","",167,null],[11,"next","","",167,null],[11,"next_back","","",167,null],[11,"next","","",166,null],[11,"next_back","","",166,null],[11,"eq","","",166,null],[11,"partial_cmp","","",166,null],[11,"cmp","","",166,null],[11,"clone","","",168,null],[11,"new","","Allocates an empty `PathBuf`.",168,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",168,null],[11,"push","","Extends `self` with `path`.",168,null],[11,"pop","","Truncate `self` to `self.parent()`.",168,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",168,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",168,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",168,null],[11,"from","","",168,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",168,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",168,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",168,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",168,null],[11,"fmt","","",168,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",169,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",169,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",169,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",169,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",169,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",169,null],[11,"is_relative","","A path is *relative* if it is not absolute.",169,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",169,null],[11,"parent","","The path without its final component, if any.",169,null],[11,"file_name","","The final component of the path, if it is a normal file.",169,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",169,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",169,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",169,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",169,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",169,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",169,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",169,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",169,null],[11,"components","","Produce an iterator over the components of the path.",169,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",169,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",169,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",169,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",169,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",169,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",169,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",169,null],[11,"exists","","Returns whether the path points at an existing entity.",169,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",169,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",169,null],[11,"deref","","",168,null],[11,"borrow","","",168,null],[11,"from","collections::borrow","",103,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",103,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",169,null],[11,"eq","","",168,null],[11,"hash","","",168,null],[11,"partial_cmp","","",168,null],[11,"cmp","","",168,null],[11,"as_ref","","",168,null],[11,"into","","",168,null],[11,"eq","","",170,null],[11,"ne","","",170,null],[11,"clone","","",170,null],[11,"fmt","","",170,null],[11,"as_ref","","",169,null],[11,"fmt","","",169,null],[11,"fmt","","",171,null],[11,"fmt","","",171,null],[11,"eq","","",169,null],[11,"hash","","",169,null],[11,"partial_cmp","","",169,null],[11,"cmp","","",169,null],[11,"as_ref","","",169,null],[11,"as_ref","std::ffi::os_str","",102,null],[11,"as_ref","collections::borrow","",103,null],[11,"as_ref","std::ffi::os_str","",101,null],[11,"as_ref","collections::string","",104,null],[11,"as_ref","std::path","",168,null],[11,"eq","","",168,null],[11,"eq","","",169,null],[11,"partial_cmp","","",168,null],[11,"partial_cmp","","",169,null],[11,"eq","","",168,null],[11,"partial_cmp","","",168,null],[11,"eq","collections::borrow","",103,null],[11,"eq","std::path","",169,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"partial_cmp","std::path","",169,null],[11,"eq","collections::borrow","",103,null],[11,"partial_cmp","","",103,null],[11,"eq","","",103,null],[11,"eq","std::path","",168,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"partial_cmp","std::path","",168,null],[11,"eq","","",168,null],[11,"eq","std::ffi::os_str","",102,null],[11,"partial_cmp","std::path","",168,null],[11,"partial_cmp","std::ffi::os_str","",102,null],[11,"eq","std::path","",168,null],[11,"partial_cmp","","",168,null],[11,"eq","","",168,null],[11,"eq","collections::borrow","",103,null],[11,"partial_cmp","std::path","",168,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"eq","std::path","",168,null],[11,"eq","std::ffi::os_str","",101,null],[11,"partial_cmp","std::path","",168,null],[11,"partial_cmp","std::ffi::os_str","",101,null],[11,"eq","std::path","",169,null],[11,"eq","std::ffi::os_str","",102,null],[11,"partial_cmp","std::path","",169,null],[11,"partial_cmp","std::ffi::os_str","",102,null],[11,"eq","std::path","",169,null],[11,"partial_cmp","","",169,null],[11,"eq","","",169,null],[11,"eq","collections::borrow","",103,null],[11,"partial_cmp","std::path","",169,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"eq","std::path","",169,null],[11,"eq","std::ffi::os_str","",101,null],[11,"partial_cmp","std::path","",169,null],[11,"partial_cmp","std::ffi::os_str","",101,null],[11,"eq","","",102,null],[11,"partial_cmp","","",102,null],[11,"eq","collections::borrow","",103,null],[11,"partial_cmp","","",103,null],[11,"eq","std::ffi::os_str","",101,null],[11,"partial_cmp","","",101,null],[11,"eq","collections::borrow","",103,null],[11,"eq","std::ffi::os_str","",102,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"partial_cmp","std::ffi::os_str","",102,null],[11,"eq","collections::borrow","",103,null],[11,"partial_cmp","","",103,null],[11,"eq","","",103,null],[11,"eq","std::ffi::os_str","",101,null],[11,"partial_cmp","collections::borrow","",103,null],[11,"partial_cmp","std::ffi::os_str","",101,null],[11,"fmt","std::path","",170,null],[11,"description","","",170,null],[11,"write","std::process","",154,null],[11,"flush","","",154,null],[11,"read","","",155,null],[11,"read_to_end","","",155,null],[11,"read","","",156,null],[11,"read_to_end","","",156,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",151,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",151,null],[11,"args","","Add multiple arguments to pass to the program.",151,null],[11,"env","","Inserts or updates an environment variable mapping.",151,null],[11,"env_remove","","Removes an environment variable mapping.",151,null],[11,"env_clear","","Clears the entire environment map for the child process.",151,null],[11,"current_dir","","Sets the working directory for the child process.",151,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",151,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",151,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",151,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",151,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",151,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",151,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",151,null],[11,"clone","","",172,null],[11,"eq","","",172,null],[11,"ne","","",172,null],[11,"fmt","","",172,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",153,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",153,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",153,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",152,null],[11,"clone","","",152,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",152,null],[11,"code","","Returns the exit code of the process, if any.",152,null],[11,"fmt","","",152,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",173,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",173,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",173,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",173,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",174,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",174,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",174,null],[11,"id","","Retrieves the id of this handle.",175,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",175,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",175,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",175,null],[11,"drop","","",174,null],[11,"drop","","",175,null],[11,"fmt","","",174,null],[11,"fmt","","",175,null],[11,"clone","std::sync::mpsc","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"fmt","","",177,null],[11,"clone","","",177,null],[11,"eq","","",177,null],[11,"fmt","","",178,null],[11,"clone","","",178,null],[11,"eq","","",178,null],[11,"fmt","","",179,null],[11,"clone","","",179,null],[11,"eq","","",179,null],[11,"clone","","",180,null],[11,"eq","","",180,null],[11,"ne","","",180,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",181,null],[11,"clone","","",181,null],[11,"drop","","",181,null],[11,"fmt","","",181,null],[11,"send","","Sends a value on this synchronous channel.",182,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",182,null],[11,"clone","","",182,null],[11,"drop","","",182,null],[11,"fmt","","",182,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",183,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",183,null],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up, or if it waits more than `timeout`.",183,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",183,null],[11,"next","","",184,null],[11,"next","","",185,null],[11,"into_iter","","",183,null],[11,"drop","","",183,null],[11,"fmt","","",183,null],[11,"fmt","","",176,null],[11,"fmt","","",176,null],[11,"description","","",176,null],[11,"cause","","",176,null],[11,"fmt","","",180,null],[11,"fmt","","",180,null],[11,"description","","",180,null],[11,"cause","","",180,null],[11,"fmt","","",177,null],[11,"description","","",177,null],[11,"cause","","",177,null],[11,"fmt","","",178,null],[11,"description","","",178,null],[11,"cause","","",178,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",186,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",186,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",187,null],[11,"clone","std::sync::condvar","",188,null],[11,"eq","","",188,null],[11,"ne","","",188,null],[11,"fmt","","",188,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",188,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",189,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",189,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",189,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",189,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",189,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",189,null],[11,"default","","",189,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",189,null],[11,"new","","Creates a new condition variable",190,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",190,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",190,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",190,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",190,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",190,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",190,null],[11,"drop","std::sync::mutex","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",31,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",191,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",191,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",191,null],[11,"destroy","","Deallocates resources associated with this static mutex.",191,null],[11,"deref","","",192,null],[11,"deref_mut","","",192,null],[11,"drop","","",192,null],[11,"new","std::sync::once","Creates a new `Once` value.",193,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",193,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",193,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",194,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",195,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",195,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",195,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",195,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",195,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",195,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",195,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",195,null],[11,"drop","","",195,null],[11,"fmt","","",195,null],[11,"default","","",195,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",196,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",196,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",196,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",196,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",196,null],[11,"destroy","","Deallocates all resources associated with this static lock.",196,null],[11,"deref","","",197,null],[11,"deref","","",198,null],[11,"deref_mut","","",198,null],[11,"drop","","",197,null],[11,"drop","","",198,null],[11,"default","core::sync::atomic","",199,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",200,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",201,null],[11,"clone","","",201,null],[11,"new","","Creates a new `AtomicBool`.",199,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",199,null],[11,"store","","Stores a value into the bool.",199,null],[11,"swap","","Stores a value into the bool, returning the old value.",199,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",199,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",199,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",199,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",199,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",199,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",199,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",199,null],[11,"new","","Creates a new `AtomicPtr`.",200,null],[11,"load","","Loads a value from the pointer.",200,null],[11,"store","","Stores a value into the pointer.",200,null],[11,"swap","","Stores a value into the pointer, returning the old value.",200,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",200,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",200,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",200,null],[11,"default","","",202,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",202,null],[11,"new","","Creates a new atomic integer.",202,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",202,null],[11,"store","","Stores a value into the atomic integer.",202,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",202,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",202,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",202,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",202,null],[11,"fetch_add","","Add to the current value, returning the previous value.",202,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",202,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",202,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",202,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",202,null],[11,"default","","",203,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",203,null],[11,"new","","Creates a new atomic integer.",203,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",203,null],[11,"store","","Stores a value into the atomic integer.",203,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",203,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",203,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",203,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",203,null],[11,"fetch_add","","Add to the current value, returning the previous value.",203,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",203,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",203,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",203,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",203,null],[11,"default","","",204,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",204,null],[11,"new","","Creates a new atomic integer.",204,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",204,null],[11,"store","","Stores a value into the atomic integer.",204,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",204,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",204,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",204,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",204,null],[11,"fetch_add","","Add to the current value, returning the previous value.",204,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",204,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",204,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",204,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",204,null],[11,"default","","",205,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",205,null],[11,"new","","Creates a new atomic integer.",205,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",205,null],[11,"store","","Stores a value into the atomic integer.",205,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",205,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",205,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",205,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",205,null],[11,"fetch_add","","Add to the current value, returning the previous value.",205,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",205,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",205,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",205,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",205,null],[11,"default","","",206,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",206,null],[11,"new","","Creates a new atomic integer.",206,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",206,null],[11,"store","","Stores a value into the atomic integer.",206,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",206,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",206,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",206,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",206,null],[11,"fetch_add","","Add to the current value, returning the previous value.",206,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",206,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",206,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",206,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",206,null],[11,"default","","",207,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",207,null],[11,"new","","Creates a new atomic integer.",207,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",207,null],[11,"store","","Stores a value into the atomic integer.",207,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",207,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",207,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",207,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",207,null],[11,"fetch_add","","Add to the current value, returning the previous value.",207,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",207,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",207,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",207,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",207,null],[11,"default","","",208,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",208,null],[11,"new","","Creates a new atomic integer.",208,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",208,null],[11,"store","","Stores a value into the atomic integer.",208,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",208,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",208,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",208,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",208,null],[11,"fetch_add","","Add to the current value, returning the previous value.",208,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",208,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",208,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",208,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",208,null],[11,"default","","",209,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",209,null],[11,"new","","Creates a new atomic integer.",209,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",209,null],[11,"store","","Stores a value into the atomic integer.",209,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",209,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",209,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",209,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",209,null],[11,"fetch_add","","Add to the current value, returning the previous value.",209,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",209,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",209,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",209,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",209,null],[11,"default","","",210,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",210,null],[11,"new","","Creates a new atomic integer.",210,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",210,null],[11,"store","","Stores a value into the atomic integer.",210,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",210,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",210,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",210,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",210,null],[11,"fetch_add","","Add to the current value, returning the previous value.",210,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",210,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",210,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",210,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",210,null],[11,"default","","",211,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",211,null],[11,"new","","Creates a new atomic integer.",211,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",211,null],[11,"store","","Stores a value into the atomic integer.",211,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",211,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",211,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",211,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",211,null],[11,"fetch_add","","Add to the current value, returning the previous value.",211,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",211,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",211,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",211,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",211,null],[11,"fmt","","",199,null],[11,"fmt","","",200,null],[11,"hash","std::time::duration","",212,null],[11,"fmt","","",212,null],[11,"cmp","","",212,null],[11,"partial_cmp","","",212,null],[11,"lt","","",212,null],[11,"le","","",212,null],[11,"gt","","",212,null],[11,"ge","","",212,null],[11,"eq","","",212,null],[11,"ne","","",212,null],[11,"clone","","",212,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",212,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",212,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",212,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",212,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",212,null],[11,"add","","",212,null],[11,"add_assign","","",212,null],[11,"sub","","",212,null],[11,"sub_assign","","",212,null],[11,"mul","","",212,null],[11,"mul_assign","","",212,null],[11,"div","","",212,null],[11,"div_assign","","",212,null],[11,"cmp","std::time","",213,null],[11,"partial_cmp","","",213,null],[11,"lt","","",213,null],[11,"le","","",213,null],[11,"gt","","",213,null],[11,"ge","","",213,null],[11,"eq","","",213,null],[11,"ne","","",213,null],[11,"clone","","",213,null],[11,"cmp","","",214,null],[11,"partial_cmp","","",214,null],[11,"lt","","",214,null],[11,"le","","",214,null],[11,"gt","","",214,null],[11,"ge","","",214,null],[11,"eq","","",214,null],[11,"ne","","",214,null],[11,"clone","","",214,null],[11,"fmt","","",215,null],[11,"clone","","",215,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",213,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",213,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",213,null],[11,"add","","",213,null],[11,"add_assign","","",213,null],[11,"sub","","",213,null],[11,"sub_assign","","",213,null],[11,"sub","","",213,null],[11,"fmt","","",213,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",214,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",214,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",214,null],[11,"add","","",214,null],[11,"add_assign","","",214,null],[11,"sub","","",214,null],[11,"sub_assign","","",214,null],[11,"fmt","","",214,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",215,null],[11,"description","","",215,null],[11,"fmt","","",215,null],[11,"fmt","std::sys_common::poison","",216,null],[11,"fmt","","",216,null],[11,"description","","",216,null],[11,"new","","Creates a `PoisonError`.",216,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",216,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",216,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",216,null],[11,"from","","",217,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",217,null],[11,"fmt","","",217,null],[11,"description","","",217,null],[11,"cause","","",217,null],[11,"clone","libc::unix","",218,null],[11,"clone","","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","","",230,null],[11,"clone","libc::unix::notbsd","",231,null],[11,"clone","","",232,null],[11,"clone","","",233,null],[11,"clone","","",234,null],[11,"clone","","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","","",242,null],[11,"clone","","",243,null],[11,"clone","","",244,null],[11,"clone","","",245,null],[11,"clone","libc::unix::notbsd::linux","",246,null],[11,"clone","","",247,null],[11,"clone","","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"clone","","",252,null],[11,"clone","","",253,null],[11,"clone","","",254,null],[11,"clone","","",255,null],[11,"clone","","",256,null],[11,"clone","","",257,null],[11,"clone","","",258,null],[11,"clone","","",259,null],[11,"clone","","",260,null],[11,"clone","","",261,null],[11,"clone","libc::unix::notbsd::linux::other","",262,null],[11,"clone","","",263,null],[11,"clone","","",264,null],[11,"clone","","",265,null],[11,"clone","","",266,null],[11,"clone","","",267,null],[11,"clone","","",268,null],[11,"clone","","",269,null],[11,"clone","","",270,null],[11,"clone","","",271,null],[11,"clone","","",272,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",273,null],[11,"clone","","",274,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",275,null],[11,"clone","","",276,null],[11,"clone","","",277,null],[11,"clone","","",278,null],[11,"clone","","",279,null],[11,"clone","","",280,null],[11,"clone","","",281,null],[11,"clone","","",282,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",283,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",283,null],[11,"file","","Returns the name of the source file from which the panic originated.",284,null],[11,"line","","Returns the line number from which the panic originated.",284,null],[11,"next","rustc_unicode::char","",285,null],[11,"next","","",286,null],[11,"clone","","",287,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"next","","",287,null],[11,"size_hint","","",287,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",41,null],[11,"fmt","","",41,null],[11,"new","core::ptr","Creates a new `Unique`.",288,null],[11,"get","","Dereferences the content.",288,null],[11,"get_mut","","Mutably dereferences the content.",288,null],[11,"deref","","",288,null],[11,"fmt","","",288,null],[11,"new","","Creates a new `Shared`.",289,null],[11,"clone","","",289,null],[11,"deref","","",289,null],[11,"fmt","","",289,null],[11,"borrow","collections::borrow","",103,null],[11,"clone","","",103,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",103,null],[11,"into_owned","","Extracts the owned data.",103,null],[11,"deref","","",103,null],[11,"cmp","","",103,null],[11,"eq","","",103,null],[11,"partial_cmp","","",103,null],[11,"fmt","","",103,null],[11,"fmt","","",103,null],[11,"default","","",103,{"inputs":[],"output":{"name":"cow"}}],[11,"hash","","",103,null],[11,"as_ref","","",103,null],[11,"hash","core::option","",290,null],[11,"fmt","","",290,null],[11,"cmp","","",290,null],[11,"partial_cmp","","",290,null],[11,"lt","","",290,null],[11,"le","","",290,null],[11,"gt","","",290,null],[11,"ge","","",290,null],[11,"eq","","",290,null],[11,"ne","","",290,null],[11,"clone","","",290,null],[11,"is_some","","Returns `true` if the option is a `Some` value",290,null],[11,"is_none","","Returns `true` if the option is a `None` value",290,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",290,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",290,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",290,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",290,null],[11,"unwrap_or","","Returns the contained value or a default.",290,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",290,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",290,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",290,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",290,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",290,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",290,null],[11,"iter","","Returns an iterator over the possibly contained value.",290,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",290,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",290,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",290,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",290,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",290,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",290,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",290,null],[11,"unwrap_or_default","","Returns the contained value or a default",290,null],[11,"default","","",290,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",290,null],[11,"fmt","","",291,null],[11,"next","","",291,null],[11,"size_hint","","",291,null],[11,"next_back","","",291,null],[11,"clone","","",291,null],[11,"fmt","","",292,null],[11,"next","","",292,null],[11,"size_hint","","",292,null],[11,"next_back","","",292,null],[11,"fmt","","",293,null],[11,"clone","","",293,null],[11,"next","","",293,null],[11,"size_hint","","",293,null],[11,"next_back","","",293,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",290,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",294,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",294,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",294,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",294,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",294,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",294,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",294,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",294,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",294,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",294,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",294,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",294,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",294,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",294,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",294,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",294,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",294,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",294,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",294,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",294,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",294,null],[11,"hash","","",294,null],[11,"fmt","","",294,null],[11,"fmt","","",294,null],[11,"fmt","","",294,null],[11,"from","","",294,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",295,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",295,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",295,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",295,null],[11,"fmt","","",295,null],[11,"default","","",295,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",294,null],[11,"as_ref","","",294,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",296,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",296,null],[11,"set","","Sets the contained value.",296,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",296,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",296,null],[11,"clone","","",296,null],[11,"default","","",296,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",296,null],[11,"partial_cmp","","",296,null],[11,"lt","","",296,null],[11,"le","","",296,null],[11,"gt","","",296,null],[11,"ge","","",296,null],[11,"cmp","","",296,null],[11,"fmt","","",297,null],[11,"eq","","",297,null],[11,"clone","","",297,null],[11,"new","","Creates a new `RefCell` containing `value`.",298,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",298,null],[11,"borrow_state","","Query the current state of this `RefCell`",298,null],[11,"borrow","","Immutably borrows the wrapped value.",298,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",298,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",298,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",298,null],[11,"clone","","",298,null],[11,"default","","",298,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",298,null],[11,"partial_cmp","","",298,null],[11,"lt","","",298,null],[11,"le","","",298,null],[11,"gt","","",298,null],[11,"ge","","",298,null],[11,"cmp","","",298,null],[11,"deref","","",299,null],[11,"clone","","Copies a `Ref`.",299,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",299,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",300,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",300,null],[11,"deref_mut","","",300,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",301,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",301,null],[11,"get","","Gets a mutable pointer to the wrapped value.",301,null],[11,"default","","",301,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"hash","core::cmp","",302,null],[11,"fmt","","",302,null],[11,"eq","","",302,null],[11,"clone","","",302,null],[11,"reverse","","Reverse the `Ordering`.",302,null],[11,"cmp","","",302,null],[11,"partial_cmp","","",302,null],[11,"clone","alloc::boxed","",303,null],[11,"pointer","","",304,null],[11,"make_place","","",304,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",304,null],[11,"finalize","","",32,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",303,null],[11,"drop","","",304,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",32,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",32,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",32,null],[11,"default","","",32,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",32,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",32,null],[11,"clone","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"partial_cmp","","",32,null],[11,"lt","","",32,null],[11,"le","","",32,null],[11,"ge","","",32,null],[11,"gt","","",32,null],[11,"cmp","","",32,null],[11,"hash","","",32,null],[11,"from","","",32,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",32,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",32,null],[11,"fmt","","",32,null],[11,"fmt","","",32,null],[11,"fmt","","",32,null],[11,"deref","","",32,null],[11,"deref_mut","","",32,null],[11,"next","","",32,null],[11,"size_hint","","",32,null],[11,"next_back","","",32,null],[11,"call_once","","",32,null],[11,"call_once","","",32,null],[11,"clone","","",32,null],[11,"borrow","","",32,null],[11,"borrow_mut","","",32,null],[11,"as_ref","","",32,null],[11,"as_mut","","",32,null],[11,"clone","collections::str","",305,null],[11,"next","","",305,null],[11,"size_hint","","",305,null],[11,"borrow","collections::string","",104,null],[11,"fmt","core::str::pattern","",306,null],[11,"eq","","",306,null],[11,"ne","","",306,null],[11,"clone","","",306,null],[11,"fmt","","",307,null],[11,"clone","","",307,null],[11,"haystack","","",307,null],[11,"next","","",307,null],[11,"next_match","","",307,null],[11,"next_reject","","",307,null],[11,"next_back","","",307,null],[11,"next_match_back","","",307,null],[11,"next_reject_back","","",307,null],[11,"fmt","","",308,null],[11,"clone","","",308,null],[11,"haystack","","",308,null],[11,"next","","",308,null],[11,"next_match","","",308,null],[11,"next_reject","","",308,null],[11,"next_back","","",308,null],[11,"next_match_back","","",308,null],[11,"next_reject_back","","",308,null],[11,"clone","","",309,null],[11,"fmt","","",309,null],[11,"haystack","","",309,null],[11,"next","","",309,null],[11,"next_match","","",309,null],[11,"next_reject","","",309,null],[11,"next_back","","",309,null],[11,"next_match_back","","",309,null],[11,"next_reject_back","","",309,null],[11,"fmt","","",310,null],[11,"clone","","",310,null],[11,"haystack","","",310,null],[11,"next","","",310,null],[11,"next_match","","",310,null],[11,"next_back","","",310,null],[11,"next_match_back","","",310,null],[11,"hash","core::ops","",311,null],[11,"eq","","",311,null],[11,"clone","","",311,null],[11,"fmt","","",311,null],[11,"hash","","",312,null],[11,"eq","","",312,null],[11,"ne","","",312,null],[11,"clone","","",312,null],[11,"fmt","","",312,null],[11,"contains","","# Examples",312,null],[11,"hash","","",313,null],[11,"eq","","",313,null],[11,"ne","","",313,null],[11,"clone","","",313,null],[11,"fmt","","",313,null],[11,"contains","","# Examples",313,null],[11,"hash","","",314,null],[11,"eq","","",314,null],[11,"ne","","",314,null],[11,"clone","","",314,null],[11,"fmt","","",314,null],[11,"contains","","# Examples",314,null],[11,"hash","","",315,null],[11,"eq","","",315,null],[11,"ne","","",315,null],[11,"clone","","",315,null],[11,"fmt","","",315,null],[11,"contains","","# Examples",315,null],[11,"hash","","",316,null],[11,"eq","","",316,null],[11,"ne","","",316,null],[11,"clone","","",316,null],[11,"fmt","","",316,null],[11,"contains","","# Examples",316,null],[11,"fmt","core::iter::range","",317,null],[11,"clone","","",317,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",313,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",312,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",315,null],[11,"next","core::iter::range","",317,null],[11,"size_hint","","",317,null],[11,"next","","",317,null],[11,"size_hint","","",317,null],[11,"next","","",317,null],[11,"size_hint","","",317,null],[11,"next","core::ops","",312,null],[11,"size_hint","","",312,null],[11,"next_back","","",312,null],[11,"next","","",313,null],[11,"next","","",315,null],[11,"size_hint","","",315,null],[11,"next_back","","",315,null],[11,"fmt","core::iter::sources","",318,null],[11,"clone","","",318,null],[11,"next","","",318,null],[11,"size_hint","","",318,null],[11,"next_back","","",318,null],[11,"fmt","","",319,null],[11,"next","","",319,null],[11,"size_hint","","",319,null],[11,"next_back","","",319,null],[11,"len","","",319,null],[11,"clone","","",319,null],[11,"default","","",319,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",320,null],[11,"clone","","",320,null],[11,"next","","",320,null],[11,"size_hint","","",320,null],[11,"next_back","","",320,null],[11,"len","","",320,null],[11,"fmt","core::iter","",321,null],[11,"clone","","",321,null],[11,"next","","",321,null],[11,"size_hint","","",321,null],[11,"next_back","","",321,null],[11,"fmt","","",322,null],[11,"clone","","",322,null],[11,"next","","",322,null],[11,"size_hint","","",322,null],[11,"next_back","","",322,null],[11,"fmt","","",323,null],[11,"clone","","",323,null],[11,"next","","",323,null],[11,"size_hint","","",323,null],[11,"fmt","","",324,null],[11,"clone","","",324,null],[11,"next","","",324,null],[11,"count","","",324,null],[11,"nth","","",324,null],[11,"find","","",324,null],[11,"last","","",324,null],[11,"size_hint","","",324,null],[11,"next_back","","",324,null],[11,"fmt","","",325,null],[11,"clone","","",325,null],[11,"next","","",325,null],[11,"size_hint","","",325,null],[11,"next_back","","",325,null],[11,"clone","","",326,null],[11,"fmt","","",326,null],[11,"next","","",326,null],[11,"size_hint","","",326,null],[11,"next_back","","",326,null],[11,"clone","","",327,null],[11,"fmt","","",327,null],[11,"next","","",327,null],[11,"size_hint","","",327,null],[11,"next_back","","",327,null],[11,"clone","","",328,null],[11,"fmt","","",328,null],[11,"next","","",328,null],[11,"size_hint","","",328,null],[11,"next_back","","",328,null],[11,"fmt","","",329,null],[11,"clone","","",329,null],[11,"next","","# Overflow Behavior",329,null],[11,"size_hint","","",329,null],[11,"nth","","",329,null],[11,"count","","",329,null],[11,"next_back","","",329,null],[11,"fmt","","",330,null],[11,"clone","","",330,null],[11,"next","","",330,null],[11,"count","","",330,null],[11,"nth","","",330,null],[11,"last","","",330,null],[11,"size_hint","","",330,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",330,null],[11,"is_empty","","Checks if the iterator has finished iterating.",330,null],[11,"clone","","",331,null],[11,"fmt","","",331,null],[11,"next","","",331,null],[11,"size_hint","","",331,null],[11,"clone","","",332,null],[11,"fmt","","",332,null],[11,"next","","",332,null],[11,"size_hint","","",332,null],[11,"fmt","","",333,null],[11,"clone","","",333,null],[11,"next","","",333,null],[11,"nth","","",333,null],[11,"count","","",333,null],[11,"last","","",333,null],[11,"size_hint","","",333,null],[11,"next_back","","",333,null],[11,"fmt","","",334,null],[11,"clone","","",334,null],[11,"next","","",334,null],[11,"nth","","",334,null],[11,"size_hint","","",334,null],[11,"clone","","",335,null],[11,"fmt","","",335,null],[11,"next","","",335,null],[11,"size_hint","","",335,null],[11,"clone","","",336,null],[11,"fmt","","",336,null],[11,"next","","",336,null],[11,"size_hint","","",336,null],[11,"next_back","","",336,null],[11,"fmt","","",337,null],[11,"clone","","",337,null],[11,"next","","",337,null],[11,"nth","","",337,null],[11,"last","","",337,null],[11,"count","","",337,null],[11,"size_hint","","",337,null],[11,"next_back","","",337,null],[11,"clone","","",338,null],[11,"fmt","","",338,null],[11,"next","","",338,null],[11,"size_hint","","",338,null],[11,"next_back","","",338,null],[11,"borrow","collections::vec","",77,null],[11,"borrow_mut","","",77,null],[11,"hash","core::result","",339,null],[11,"fmt","","",339,null],[11,"cmp","","",339,null],[11,"partial_cmp","","",339,null],[11,"lt","","",339,null],[11,"le","","",339,null],[11,"gt","","",339,null],[11,"ge","","",339,null],[11,"eq","","",339,null],[11,"ne","","",339,null],[11,"clone","","",339,null],[11,"is_ok","","Returns true if the result is `Ok`",339,null],[11,"is_err","","Returns true if the result is `Err`",339,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",339,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",339,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",339,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",339,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",339,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",339,null],[11,"iter","","Returns an iterator over the possibly contained value.",339,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",339,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",339,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",339,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",339,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",339,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",339,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",339,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",339,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",339,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",339,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",339,null],[11,"fmt","","",340,null],[11,"next","","",340,null],[11,"size_hint","","",340,null],[11,"next_back","","",340,null],[11,"clone","","",340,null],[11,"fmt","","",341,null],[11,"next","","",341,null],[11,"size_hint","","",341,null],[11,"next_back","","",341,null],[11,"fmt","","",342,null],[11,"next","","",342,null],[11,"size_hint","","",342,null],[11,"next_back","","",342,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",339,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","openssl","",343,null],[11,"fmt","","",343,null],[11,"is","","Returns true if the boxed type is the same as `T`",343,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",343,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",343,null],[11,"is","","Forwards to the method defined on the type `Any`.",343,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",343,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",343,null],[11,"hash","core::any","",344,null],[11,"fmt","","",344,null],[11,"eq","","",344,null],[11,"ne","","",344,null],[11,"clone","","",344,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",344,{"inputs":[],"output":{"name":"typeid"}}],[11,"clone","core::raw","",345,null],[11,"cmp","collections::string","",104,null],[11,"partial_cmp","","",104,null],[11,"lt","","",104,null],[11,"le","","",104,null],[11,"gt","","",104,null],[11,"ge","","",104,null],[11,"fmt","","",38,null],[11,"fmt","","",39,null],[11,"new","","Creates a new empty `String`.",104,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",104,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",104,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",104,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",104,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",104,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",104,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",104,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",104,null],[11,"as_str","","Extracts a string slice containing the entire string.",104,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",104,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",104,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",104,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",104,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",104,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",104,null],[11,"push","","Appends the given `char` to the end of this `String`.",104,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",104,null],[11,"truncate","","Shortens this `String` to the specified length.",104,null],[11,"pop","","Removes the last character from the string buffer and returns it.",104,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",104,null],[11,"insert","","Inserts a character into this `String` at a byte position.",104,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",104,null],[11,"len","","Returns the length of this `String`, in bytes.",104,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",104,null],[11,"clear","","Truncates this `String`, removing all contents.",104,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",104,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",104,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",38,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",38,null],[11,"fmt","","",38,null],[11,"fmt","","",39,null],[11,"clone","","",104,null],[11,"clone_from","","",104,null],[11,"from_iter","","",104,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",104,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",104,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",104,null],[11,"extend","","",104,null],[11,"extend","","",104,null],[11,"extend","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","collections::borrow","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","collections::string","",104,null],[11,"ne","","",104,null],[11,"default","","",104,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",104,null],[11,"fmt","","",104,null],[11,"hash","","",104,null],[11,"add","","",104,null],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"deref","","",104,null],[11,"deref_mut","","",104,null],[11,"from_str","","",104,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"as_ref","","",104,null],[11,"as_ref","","",104,null],[11,"from","","",104,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",103,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",103,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",104,null],[11,"write_str","","",104,null],[11,"write_char","","",104,null],[11,"drop","","",346,null],[11,"next","","",346,null],[11,"size_hint","","",346,null],[11,"next_back","","",346,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",77,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",77,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",77,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",77,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",77,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",77,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",77,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",77,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",77,null],[11,"as_slice","","Extracts a slice containing the entire vector.",77,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",77,null],[11,"set_len","","Sets the length of a vector.",77,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",77,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",77,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",77,null],[11,"retain","","Retains only the elements specified by the predicate.",77,null],[11,"push","","Appends an element to the back of a collection.",77,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",77,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",77,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",77,null],[11,"clear","","Clears the vector, removing all values.",77,null],[11,"len","","Returns the number of elements in the vector.",77,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",77,null],[11,"split_off","","Splits the collection into two at the given index.",77,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",77,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",77,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",77,null],[11,"clone","","",77,null],[11,"clone_from","","",77,null],[11,"hash","","",77,null],[11,"index","","",77,null],[11,"index_mut","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"index_mut","","",77,null],[11,"deref","","",77,null],[11,"deref_mut","","",77,null],[11,"from_iter","","",77,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",77,null],[11,"extend","","",77,null],[11,"extend","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","collections::borrow","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","collections::vec","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"partial_cmp","","",77,null],[11,"cmp","","",77,null],[11,"drop","","",77,null],[11,"default","","",77,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",77,null],[11,"as_ref","","",77,null],[11,"as_mut","","",77,null],[11,"as_ref","","",77,null],[11,"as_mut","","",77,null],[11,"from","","",77,null],[11,"from","","",77,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",103,null],[11,"from","","",103,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",103,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",347,null],[11,"size_hint","","",347,null],[11,"count","","",347,null],[11,"next_back","","",347,null],[11,"clone","","",347,null],[11,"drop","","",347,null],[11,"next","","",348,null],[11,"size_hint","","",348,null],[11,"next_back","","",348,null],[11,"drop","","",348,null],[11,"hash","core::marker","",349,null],[11,"eq","","",349,null],[11,"partial_cmp","","",349,null],[11,"cmp","","",349,null],[11,"clone","","",349,null],[11,"default","","",349,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"default","core::hash::sip","",350,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",350,null],[11,"fmt","","",350,null],[11,"default","","",351,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",351,null],[11,"fmt","","",351,null],[11,"default","","",352,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",352,null],[11,"fmt","","",352,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",352,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",352,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",350,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",350,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",351,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",351,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",352,null],[11,"finish","","",352,null],[11,"write","","",350,null],[11,"finish","","",350,null],[11,"write","","",351,null],[11,"finish","","",351,null],[11,"fmt","core::hash","",353,null],[11,"build_hasher","","",353,null],[11,"clone","","",353,null],[11,"default","","",353,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"from_ptr","openssl::ssl","",354,null],[11,"as_ptr","","",354,null],[11,"set_verify","","Configures the certificate verification method for new connections.",354,null],[11,"set_verify_callback","","Configures the certificate verification method for new connections and\nregisters a verification callback.",354,null],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections",354,null],[11,"set_verify_depth","","Sets verification depth",354,null],[11,"set_read_ahead","","",354,null],[11,"set_tmp_dh","","",354,null],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",354,null],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",354,null],[11,"set_session_id_context","","Set the context identifier for sessions",354,null],[11,"set_certificate_file","","Specifies the file that contains certificate",354,null],[11,"set_certificate_chain_file","","Specifies the file that contains certificate chain",354,null],[11,"set_certificate","","Specifies the certificate",354,null],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",354,null],[11,"set_private_key_file","","Specifies the file that contains private key",354,null],[11,"set_private_key","","Specifies the private key",354,null],[11,"check_private_key","","Check consistency of private key and certificate",354,null],[11,"set_cipher_list","","",354,null],[11,"set_options","","",354,null],[11,"options","","",354,null],[11,"clear_options","","",354,null],[11,"fmt","","",355,null],[11,"drop","","",355,null],[11,"deref","","",355,null],[11,"deref_mut","","",355,null],[11,"new","","Creates a new SSL context.",355,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"from_ptr","","",355,null],[11,"as_ptr","","",355,null],[11,"name","","Returns the name of cipher.",356,null],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",356,null],[11,"bits","","Returns the number of bits used for the cipher.",356,null],[11,"description","","Returns a textual description of the cipher used",356,null],[11,"fmt","","",357,null],[11,"from_ptr","","",357,null],[11,"as_ptr","","",357,null],[11,"set_verify","","Sets the verification mode to be used during the handshake process.",357,null],[11,"set_verify_callback","","Sets the certificate verification callback to be used during the\nhandshake process.",357,null],[11,"current_cipher","","",357,null],[11,"state_string","","",357,null],[11,"state_string_long","","",357,null],[11,"set_hostname","","Sets the host name to be used with SNI (Server Name Indication).",357,null],[11,"peer_certificate","","Returns the certificate of the peer, if present.",357,null],[11,"version","","Returns the name of the protocol used for the connection, e.g. &quot;TLSv1.2&quot;, &quot;SSLv3&quot;, etc.",357,null],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS\nrecord.",357,null],[11,"compression","","Returns the compression currently in use.",357,null],[11,"ssl_method","","",357,null],[11,"servername","","Returns the server&#39;s name for the current connection",357,null],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",357,null],[11,"ssl_context","","Returns the context corresponding to the current connection",357,null],[11,"fmt","","",358,null],[11,"drop","","",358,null],[11,"deref","","",358,null],[11,"deref_mut","","",358,null],[11,"new","","",358,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"from_ptr","","",358,null],[11,"fmt","","",359,null],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",359,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",359,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",359,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",359,null],[11,"fmt","","",27,null],[11,"description","","",27,null],[11,"cause","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",360,null],[11,"get_ref","","Returns a shared reference to the inner stream.",360,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",360,null],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",360,null],[11,"error","","Returns the underlying error which interrupted this handshake.",360,null],[11,"handshake","","Restarts the handshake process.",360,null],[11,"get_ref","","Returns a reference to the underlying stream.",359,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",359,null],[11,"ssl","","Returns the OpenSSL `Ssl` object associated with this stream.",359,null],[11,"read","","",359,null],[11,"write","","",359,null],[11,"flush","","",359,null],[11,"into_ssl","","",358,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"inputs":[],"output":{"name":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, &quot;OpenSSL 0.9.5a 1 Apr 2000&quot;.",null,{"inputs":[],"output":{"name":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form &quot;compiler: ...&quot; if available or\n&quot;compiler: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"built_on","","The date of the build process in the form &quot;built on: ...&quot; if available or &quot;built on: date not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"platform","","The &quot;Configure&quot; target of the library build in the form &quot;platform: ...&quot; if available or &quot;platform: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"dir","","The &quot;OPENSSLDIR&quot; setting of the library build in the form &quot;OPENSSLDIR: &quot;...&quot;&quot; if available or &quot;OPENSSLDIR: N/A&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[0,"x509","openssl","",null,null],[3,"SslString","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509Ref","","A borrowed public key certificate.",null,null],[3,"X509","","An owned public key certificate.",null,null],[3,"X509Name","","",null,null],[3,"X509Req","","A certificate signing request",null,null],[3,"GeneralNames","","A collection of OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralNamesIter","","An iterator over OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralName","","An OpenSSL `GENERAL_NAME`.",null,null],[4,"X509FileType","","",null,null],[13,"PEM","","",361,null],[13,"ASN1","","",361,null],[13,"Default","","",361,null],[4,"X509ValidationError","","",null,null],[13,"X509UnableToGetIssuerCert","","",362,null],[13,"X509UnableToGetCrl","","",362,null],[13,"X509UnableToDecryptCertSignature","","",362,null],[13,"X509UnableToDecryptCrlSignature","","",362,null],[13,"X509UnableToDecodeIssuerPublicKey","","",362,null],[13,"X509CertSignatureFailure","","",362,null],[13,"X509CrlSignatureFailure","","",362,null],[13,"X509CertNotYetValid","","",362,null],[13,"X509CertHasExpired","","",362,null],[13,"X509CrlNotYetValid","","",362,null],[13,"X509CrlHasExpired","","",362,null],[13,"X509ErrorInCertNotBeforeField","","",362,null],[13,"X509ErrorInCertNotAfterField","","",362,null],[13,"X509ErrorInCrlLastUpdateField","","",362,null],[13,"X509ErrorInCrlNextUpdateField","","",362,null],[13,"X509OutOfMem","","",362,null],[13,"X509DepthZeroSelfSignedCert","","",362,null],[13,"X509SelfSignedCertInChain","","",362,null],[13,"X509UnableToGetIssuerCertLocally","","",362,null],[13,"X509UnableToVerifyLeafSignature","","",362,null],[13,"X509CertChainTooLong","","",362,null],[13,"X509CertRevoked","","",362,null],[13,"X509InvalidCA","","",362,null],[13,"X509PathLengthExceeded","","",362,null],[13,"X509InvalidPurpose","","",362,null],[13,"X509CertUntrusted","","",362,null],[13,"X509CertRejected","","",362,null],[13,"X509SubjectIssuerMismatch","","",362,null],[13,"X509AkidSkidMismatch","","",362,null],[13,"X509AkidIssuerSerialMismatch","","",362,null],[13,"X509KeyusageNoCertsign","","",362,null],[13,"X509UnableToGetCrlIssuer","","",362,null],[13,"X509UnhandledCriticalExtension","","",362,null],[13,"X509KeyusageNoCrlSign","","",362,null],[13,"X509UnhandledCriticalCrlExtension","","",362,null],[13,"X509InvalidNonCA","","",362,null],[13,"X509ProxyPathLengthExceeded","","",362,null],[13,"X509KeyusageNoDigitalSignature","","",362,null],[13,"X509ProxyCertificatesNotAllowed","","",362,null],[13,"X509InvalidExtension","","",362,null],[13,"X509InavlidPolicyExtension","","",362,null],[13,"X509NoExplicitPolicy","","",362,null],[13,"X509DifferentCrlScope","","",362,null],[13,"X509UnsupportedExtensionFeature","","",362,null],[13,"X509UnnestedResource","","",362,null],[13,"X509PermittedVolation","","",362,null],[13,"X509ExcludedViolation","","",362,null],[13,"X509SubtreeMinmax","","",362,null],[13,"X509UnsupportedConstraintType","","",362,null],[13,"X509UnsupportedConstraintSyntax","","",362,null],[13,"X509UnsupportedNameSyntax","","",362,null],[13,"X509CrlPathValidationError","","",362,null],[13,"X509ApplicationVerification","","",362,null],[13,"X509UnknownError","","",362,null],[0,"extension","","",null,null],[4,"ExtensionType","openssl::x509::extension","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",363,null],[13,"ExtKeyUsage","","",363,null],[13,"SubjectAltName","","",363,null],[13,"IssuerAltName","","",363,null],[13,"OtherNid","","",363,null],[13,"OtherStr","","",363,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",364,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",364,null],[13,"SubjectAltName","","Subject Alternative Names",364,null],[13,"IssuerAltName","","Issuer Alternative Names",364,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",364,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",364,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",365,null],[13,"NonRepudiation","","",365,null],[13,"KeyEncipherment","","",365,null],[13,"DataEncipherment","","",365,null],[13,"KeyAgreement","","",365,null],[13,"KeyCertSign","","",365,null],[13,"CRLSign","","",365,null],[13,"EncipherOnly","","",365,null],[13,"DecipherOnly","","",365,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",366,null],[13,"ClientAuth","","",366,null],[13,"CodeSigning","","",366,null],[13,"EmailProtection","","",366,null],[13,"TimeStamping","","",366,null],[13,"MsCodeInd","","",366,null],[13,"MsCodeCom","","",366,null],[13,"MsCtlSign","","",366,null],[13,"MsSgc","","",366,null],[13,"MsEfs","","",366,null],[13,"NsSgc","","",366,null],[13,"Other","","An arbitrary key usage by OID.",366,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",367,null],[13,"Email","","",367,null],[13,"DNS","","",367,null],[13,"Directory","","",367,null],[13,"URI","","",367,null],[13,"IPAddress","","",367,null],[13,"RegisteredID","","",367,null],[11,"eq","","",363,null],[11,"ne","","",363,null],[11,"hash","","",363,null],[11,"clone","","",363,null],[11,"clone","","",364,null],[11,"get_type","","",364,null],[11,"get_nid","","",363,null],[11,"get_name","","",363,null],[11,"to_string","","",364,null],[11,"clone","","",365,null],[11,"fmt","","",365,null],[11,"clone","","",366,null],[11,"fmt","","",366,null],[11,"clone","","",367,null],[11,"fmt","","",367,null],[11,"drop","openssl::x509","",368,null],[11,"deref","","",368,null],[11,"fmt","","",368,null],[11,"fmt","","",368,null],[11,"clone","","",361,null],[11,"new","","",369,null],[11,"error","","",369,null],[11,"current_cert","","",369,null],[11,"error_depth","","",369,null],[11,"new","","Creates a new generator with the following defaults:",370,{"inputs":[],"output":{"name":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",370,null],[11,"add_name","","Add attribute to the name of the certificate",370,null],[11,"add_names","","Add multiple attributes to the name of the certificate",370,null],[11,"add_extension","","Add an extension to a certificate",370,null],[11,"add_extensions","","Add multiple extensions to a certificate",370,null],[11,"set_sign_hash","","",370,null],[11,"sign","","Sets the certificate public-key, then self-sign and return it\nNote: That the bit-length of the private key is used (set_bitlength is ignored)",370,null],[11,"from_ptr","","Creates a new `X509Ref` wrapping the provided handle.",371,null],[11,"new","","",371,null],[11,"as_ptr","","",371,null],[11,"subject_name","","",371,null],[11,"subject_alt_names","","Returns this certificate&#39;s SAN entries, if they exist.",371,null],[11,"public_key","","",371,null],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",371,null],[11,"to_pem","","Writes certificate as PEM",371,null],[11,"to_der","","Returns a DER serialized form of the certificate",371,null],[11,"from_ptr","","Returns a new `X509`, taking ownership of the handle.",372,null],[11,"new","","",372,null],[11,"from_der","","Reads a certificate from DER.",372,null],[11,"from_pem","","Reads a certificate from PEM.",372,null],[11,"deref","","",372,null],[11,"drop","","",372,null],[11,"text_by_nid","","",373,null],[11,"new","","Creates new from handle",374,null],[11,"as_ptr","","",374,null],[11,"from_pem","","Reads CSR from PEM",374,null],[11,"to_pem","","Writes CSR as PEM",374,null],[11,"to_der","","Returns a DER serialized form of the CSR",374,null],[11,"drop","","",374,null],[11,"clone","","",362,null],[11,"drop","","",375,null],[11,"len","","Returns the number of `GeneralName`s in this structure.",375,null],[11,"get","","Returns the specified `GeneralName`.",375,null],[11,"iter","","Returns an iterator over the `GeneralName`s in this structure.",375,null],[11,"next","","",376,null],[11,"size_hint","","",376,null],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",377,null],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",377,null]],"paths":[[3,"Asn1Time"],[3,"Asn1TimeRef"],[4,"RNGProperty"],[3,"BigNumRef"],[3,"BigNum"],[4,"Type"],[3,"Hasher"],[3,"KeyIvPair"],[3,"ParsedPkcs12"],[3,"Pkcs12"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[3,"RSA"],[3,"DSAParams"],[3,"DSA"],[3,"DH"],[3,"ErrorStack"],[3,"Error"],[3,"Error"],[3,"Error"],[4,"Nid"],[3,"CipherBits"],[4,"Error"],[4,"SslMethod"],[4,"SniError"],[4,"HandshakeError"],[8,"IntoSsl"],[3,"SslContextOptions"],[3,"SslVerifyMode"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"PeekMut"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Unique"],[3,"Shared"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Rc"],[3,"Weak"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"TraitObject"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"PhantomData"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"SslContextRef"],[3,"SslContext"],[3,"SslCipher"],[3,"SslRef"],[3,"Ssl"],[3,"SslStream"],[3,"MidHandshakeSslStream"],[4,"X509FileType"],[4,"X509ValidationError"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"SslString"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509Ref"],[3,"X509"],[3,"X509Name"],[3,"X509Req"],[3,"GeneralNames"],[3,"GeneralNamesIter"],[3,"GeneralName"]]};
searchIndex["flate2"] = {"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"GzBuilder","flate2","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DataError","","Error returned when a decompression object finds that the input stream of\nbytes was not a valid input stream of bytes.",null,null],[4,"Status","","Possible status results of compressing some data or successfully\ndecompressing a block of data.",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to input or output\nbuffers being empty.",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output bytes have\nbeen written. Decompression/compression should not be called again.",0,null],[4,"Flush","","Values which indicate the form of flushing to be used when compressing or\ndecompressing in-memory data.",null,null],[13,"None","","A typical parameter for passing to compression/decompression functions,\nthis indicates that the underlying stream to decide how much data to\naccumulate before producing output in order to maximize compression.",1,null],[13,"Sync","","All pending output is flushed to the output buffer and the output is\naligned on a byte boundary so that the decompressor can get all input\ndata available so far.",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but the output is\nnot aligned to a byte boundary.",1,null],[13,"Block","","A deflate block is completed and emitted, as for `Flush::Sync`, but the\noutput is not aligned on a byte boundary and up to seven vits of the\ncurrent block are held to be written as the next byte after the next\ndeflate block is completed.",1,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the compression state is\nreset so decompression can restart from this point if previous\ncompressed data has been damaged or if random access is desired.",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"Compression","","When compressing data, the compression level can be specified by a value in\nthis enum.",null,null],[13,"None","","No compression is to be performed, this may actually inflate data\nslightly when encoding.",2,null],[13,"Fast","","Optimize for the best speed of encoding.",2,null],[13,"Best","","Optimize for the size of data being encoded.",2,null],[13,"Default","","Choose the default compression, a balance between speed and size.",2,null],[11,"new","","Create a new blank builder with no header by default.",3,{"inputs":[],"output":{"name":"builder"}}],[11,"mtime","","Configure the `mtime` field in the gzip header.",3,null],[11,"extra","","Configure the `extra` field in the gzip header.",3,null],[11,"filename","","Configure the `filename` field in the gzip header.",3,null],[11,"comment","","Configure the `comment` field in the gzip header.",3,null],[11,"write","","Consume this builder, creating a writer encoder in the process.",3,null],[11,"read","","Consume this builder, creating a reader encoder in the process.",3,null],[11,"buf_read","","Consume this builder, creating a reader encoder in the process.",3,null],[11,"filename","","Returns the `filename` field of this gzip stream&#39;s header, if present.",4,null],[11,"extra","","Returns the `extra` field of this gzip stream&#39;s header, if present.",4,null],[11,"comment","","Returns the `comment` field of this gzip stream&#39;s header, if present.",4,null],[11,"mtime","","Returns the `mtime` field of this gzip stream&#39;s header, if present.",4,null],[11,"fmt","","",5,null],[11,"new","","Creates a new object ready for compressing data that it&#39;s given.",6,{"inputs":[{"name":"compression"},{"name":"bool"}],"output":{"name":"compress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by\nthis compression object.",6,null],[11,"total_out","","Returns the total number of output bytes which have been produced by\nthis compression object.",6,null],[11,"reset","","Quickly resets this compressor without having to reallocate anything.",6,null],[11,"compress","","Compresses the input data into the output, consuming only as much\ninput as needed and writing as much output as possible.",6,null],[11,"compress_vec","","Compresses the input data into the extra space of the output, consuming\nonly as much input as needed and writing as much output as possible.",6,null],[11,"new","","Creates a new object ready for decompressing data that it&#39;s given.",7,{"inputs":[{"name":"bool"}],"output":{"name":"decompress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by\nthis decompression object.",7,null],[11,"total_out","","Returns the total number of output bytes which have been produced by\nthis decompression object.",7,null],[11,"decompress","","Decompresses the input data into the output, consuming only as much\ninput as needed and writing as much output as possible.",7,null],[11,"decompress_vec","","Decompresses the input data into the extra space in the output vector\nspecified by `output`.",7,null],[11,"description","","",5,null],[11,"fmt","","",5,null],[0,"read","","Types which operate over `Read` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::read","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[0,"write","flate2","Types which operate over `Write` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::write","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[0,"bufread","flate2","Types which operate over `BufRead` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::bufread","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[8,"FlateReadExt","flate2","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"gz_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[11,"zlib_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"zlib_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[11,"deflate_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"deflate_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[8,"FlateWriteExt","","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"zlib_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"zlib_decode","","Consume this writer to create a decompression stream of this stream.",9,null],[11,"deflate_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"deflate_decode","","Consume this writer to create a decompression stream of this stream.",9,null],[11,"clone","","",2,null],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream\ngiven at the given compression level.",10,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output\nstream for another.",10,null],[11,"finish","","Consumes this encoder, flushing the output stream.",10,null],[11,"write","","",10,null],[11,"flush","","",10,null],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",11,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",11,null],[11,"get_ref","","Acquires a reference to the underlying reader",11,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",11,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",11,null],[11,"read","","",11,null],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",12,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",12,null],[11,"get_ref","","Acquires a reference to the underlying reader",12,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",12,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",12,null],[11,"read","","",12,null],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given\nstream.",13,{"inputs":[{"name":"r"}],"output":{"name":"decoderreader"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",13,{"inputs":[{"name":"r"},{"name":"vec"}],"output":{"name":"decoderreader"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",13,null],[11,"get_ref","","Acquires a reference to the underlying stream",13,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",13,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",13,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",13,null],[11,"read","","",13,null],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given\nstream.",14,{"inputs":[{"name":"r"}],"output":{"name":"decoderreaderbuf"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",14,null],[11,"get_ref","","Acquires a reference to the underlying stream",14,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",14,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",14,null],[11,"read","","",14,null],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",15,{"inputs":[{"name":"w"}],"output":{"name":"decoderwriter"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output\nstream for another.",15,null],[11,"finish","","Consumes this encoder, flushing the output stream.",15,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for\ndecompression.",15,null],[11,"total_out","","Returns the number of bytes that the decompressor has written to its\noutput stream.",15,null],[11,"write","","",15,null],[11,"flush","","",15,null],[11,"new","","Creates a new encoder which will use the given compression level.",16,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"finish","","Finish encoding this stream, returning the underlying writer once the\nencoding is done.",16,null],[11,"write","","",16,null],[11,"flush","","",16,null],[11,"drop","","",16,null],[11,"new","flate2::read","Creates a new encoder which will use the given compression level.",17,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",17,null],[11,"read","","",17,null],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression level.",18,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",18,null],[11,"read","","",18,null],[11,"new","flate2::read","Creates a new decoder from the given reader, immediately parsing the\ngzip header.",19,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"header","","Returns the header associated with this stream.",19,null],[11,"read","","",19,null],[11,"new","flate2::bufread","Creates a new decoder from the given reader, immediately parsing the\ngzip header.",20,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"header","","Returns the header associated with this stream.",20,null],[11,"read","","",20,null],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream\ngiven at the given compression level.",21,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output\nstream for another.",21,null],[11,"finish","","Consumes this encoder, flushing the output stream.",21,null],[11,"write","","",21,null],[11,"flush","","",21,null],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",22,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",22,null],[11,"get_ref","","Acquires a reference to the underlying stream",22,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",22,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",22,null],[11,"read","","",22,null],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",23,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",23,null],[11,"get_ref","","Acquires a reference to the underlying stream",23,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",23,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",23,null],[11,"read","","",23,null],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given\nstream.",24,{"inputs":[{"name":"r"}],"output":{"name":"decoderreader"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",24,{"inputs":[{"name":"r"},{"name":"vec"}],"output":{"name":"decoderreader"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",24,null],[11,"get_ref","","Acquires a reference to the underlying stream",24,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",24,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",24,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",24,null],[11,"read","","",24,null],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given\nstream.",25,{"inputs":[{"name":"r"}],"output":{"name":"decoderreaderbuf"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",25,null],[11,"get_ref","","Acquires a reference to the underlying stream",25,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",25,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",25,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",25,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",25,null],[11,"read","","",25,null],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",26,{"inputs":[{"name":"w"}],"output":{"name":"decoderwriter"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output\nstream for another.",26,null],[11,"finish","","Consumes this encoder, flushing the output stream.",26,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for\ndecompression.",26,null],[11,"total_out","","Returns the number of bytes that the decompressor has written to its\noutput stream.",26,null],[11,"write","","",26,null],[11,"flush","","",26,null]],"paths":[[4,"Status"],[4,"Flush"],[4,"Compression"],[3,"GzBuilder"],[3,"GzHeader"],[3,"DataError"],[3,"Compress"],[3,"Decompress"],[8,"FlateReadExt"],[8,"FlateWriteExt"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"]]};
searchIndex["snappy"] = {"doc":"","items":[[5,"validate_compressed_buffer","snappy","",null,null],[5,"compress","","",null,null],[5,"uncompress","","Uncompress &#39;src&#39; into a newly allocated vector.",null,null],[5,"uncompress_to","","Uncompress &#39;src&#39; directly appended to &#39;dst&#39; and return the number\nof bytes produced. Return an error upon an invalid &#39;src&#39;.",null,null]],"paths":[]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"PKCS12","openssl_sys","",null,null],[3,"stack_st_X509","","",null,null],[12,"stack","","",0,null],[3,"stack_st_X509_EXTENSION","","",null,null],[12,"stack","","",1,null],[3,"stack_st_GENERAL_NAME","","",null,null],[12,"stack","","",2,null],[3,"stack_st_void","","",null,null],[12,"stack","","",3,null],[3,"BIO_METHOD","","",null,null],[12,"type_","","",4,null],[12,"name","","",4,null],[12,"bwrite","","",4,null],[12,"bread","","",4,null],[12,"bputs","","",4,null],[12,"bgets","","",4,null],[12,"ctrl","","",4,null],[12,"create","","",4,null],[12,"destroy","","",4,null],[12,"callback_ctrl","","",4,null],[3,"_STACK","","",null,null],[12,"num","","",5,null],[12,"data","","",5,null],[12,"sorted","","",5,null],[12,"num_alloc","","",5,null],[12,"comp","","",5,null],[3,"RSA","","",null,null],[12,"pad","","",6,null],[12,"version","","",6,null],[12,"meth","","",6,null],[12,"engine","","",6,null],[12,"n","","",6,null],[12,"e","","",6,null],[12,"d","","",6,null],[12,"p","","",6,null],[12,"q","","",6,null],[12,"dmp1","","",6,null],[12,"dmq1","","",6,null],[12,"iqmp","","",6,null],[12,"ex_data","","",6,null],[12,"references","","",6,null],[12,"flags","","",6,null],[12,"_method_mod_n","","",6,null],[12,"_method_mod_p","","",6,null],[12,"_method_mod_q","","",6,null],[12,"bignum_data","","",6,null],[12,"blinding","","",6,null],[12,"mt_blinding","","",6,null],[3,"DSA","","",null,null],[12,"pad","","",7,null],[12,"version","","",7,null],[12,"write_params","","",7,null],[12,"p","","",7,null],[12,"q","","",7,null],[12,"g","","",7,null],[12,"pub_key","","",7,null],[12,"priv_key","","",7,null],[12,"kinv","","",7,null],[12,"r","","",7,null],[12,"flags","","",7,null],[12,"_method_mont_p","","",7,null],[12,"references","","",7,null],[12,"ex_data","","",7,null],[12,"meth","","",7,null],[12,"engine","","",7,null],[3,"EVP_PKEY","","",null,null],[12,"type_","","",8,null],[12,"save_type","","",8,null],[12,"references","","",8,null],[12,"ameth","","",8,null],[12,"engine","","",8,null],[12,"pkey","","",8,null],[12,"save_parameters","","",8,null],[12,"attributes","","",8,null],[3,"BIO","","",null,null],[12,"method","","",9,null],[12,"callback","","",9,null],[12,"cb_arg","","",9,null],[12,"init","","",9,null],[12,"shutdown","","",9,null],[12,"flags","","",9,null],[12,"retry_reason","","",9,null],[12,"num","","",9,null],[12,"ptr","","",9,null],[12,"next_bio","","",9,null],[12,"prev_bio","","",9,null],[12,"references","","",9,null],[12,"num_read","","",9,null],[12,"num_write","","",9,null],[12,"ex_data","","",9,null],[3,"CRYPTO_EX_DATA","","",null,null],[12,"sk","","",10,null],[12,"dummy","","",10,null],[3,"EVP_MD_CTX","","",null,null],[3,"EVP_CIPHER","","",null,null],[12,"nid","","",11,null],[12,"block_size","","",11,null],[12,"key_len","","",11,null],[12,"iv_len","","",11,null],[12,"flags","","",11,null],[12,"init","","",11,null],[12,"do_cipher","","",11,null],[12,"cleanup","","",11,null],[12,"ctx_size","","",11,null],[12,"set_asn1_parameters","","",11,null],[12,"get_asn1_parameters","","",11,null],[12,"ctrl","","",11,null],[12,"app_data","","",11,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",12,null],[12,"d","","",12,null],[3,"BIGNUM","","",null,null],[12,"d","","",13,null],[12,"top","","",13,null],[12,"dmax","","",13,null],[12,"neg","","",13,null],[12,"flags","","",13,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"EVP_CIPHER_block_size","","",null,null],[5,"EVP_CIPHER_key_length","","",null,null],[5,"EVP_CIPHER_iv_length","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_set_id_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_free","","",null,null],[5,"DH_new_from_params","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"OPENSSL_add_all_algorithms_noconf","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_get_ex_new_index","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_STRING_data","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_EXT_conf","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"d2i_X509","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"sk_free","","",null,null],[5,"sk_pop_free","","",null,null],[5,"sk_pop","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"SSLeay","","",null,null],[5,"SSLeay_version","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",14,null],[12,"cert_dir","","",14,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"ASN1_TYPE","","",null,null],[6,"BN_CTX","","",null,null],[6,"BN_GENCB","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"DH","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CIPHER","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"bio_st","","",null,null],[6,"bio_info_cb","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"RSA_F4","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"SSLEAY_VERSION","","",null,null],[17,"SSLEAY_CFLAGS","","",null,null],[17,"SSLEAY_BUILT_ON","","",null,null],[17,"SSLEAY_PLATFORM","","",null,null],[17,"SSLEAY_DIR","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[11,"clone","","",4,null],[11,"clone","","",15,null],[11,"clone","","",11,null],[11,"clone","","",16,null],[11,"clone","","",12,null],[11,"clone","","",17,null],[11,"clone","","",13,null]],"paths":[[3,"stack_st_X509"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"BIO_METHOD"],[3,"_STACK"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"GENERAL_NAME"],[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex["miniz_sys"] = {"doc":"","items":[[3,"mz_stream","miniz_sys","",null,null],[12,"next_in","","",0,null],[12,"avail_in","","",0,null],[12,"total_in","","",0,null],[12,"next_out","","",0,null],[12,"avail_out","","",0,null],[12,"total_out","","",0,null],[12,"msg","","",0,null],[12,"state","","",0,null],[12,"zalloc","","",0,null],[12,"zfree","","",0,null],[12,"opaque","","",0,null],[12,"data_type","","",0,null],[12,"adler","","",0,null],[12,"reserved","","",0,null],[4,"mz_internal_state","","",null,null],[5,"mz_deflateInit2","","",null,null],[5,"mz_deflate","","",null,null],[5,"mz_deflateEnd","","",null,null],[5,"mz_deflateReset","","",null,null],[5,"mz_inflateInit2","","",null,null],[5,"mz_inflate","","",null,null],[5,"mz_inflateEnd","","",null,null],[5,"mz_crc32","","",null,null],[6,"mz_alloc_func","","",null,null],[6,"mz_free_func","","",null,null],[17,"MZ_NO_FLUSH","","",null,null],[17,"MZ_PARTIAL_FLUSH","","",null,null],[17,"MZ_SYNC_FLUSH","","",null,null],[17,"MZ_FULL_FLUSH","","",null,null],[17,"MZ_FINISH","","",null,null],[17,"MZ_BLOCK","","",null,null],[17,"MZ_OK","","",null,null],[17,"MZ_STREAM_END","","",null,null],[17,"MZ_NEED_DICT","","",null,null],[17,"MZ_ERRNO","","",null,null],[17,"MZ_STREAM_ERROR","","",null,null],[17,"MZ_DATA_ERROR","","",null,null],[17,"MZ_MEM_ERROR","","",null,null],[17,"MZ_BUF_ERROR","","",null,null],[17,"MZ_VERSION_ERROR","","",null,null],[17,"MZ_PARAM_ERROR","","",null,null],[17,"MZ_DEFLATED","","",null,null],[17,"MZ_DEFAULT_WINDOW_BITS","","",null,null],[17,"MZ_DEFAULT_STRATEGY","","",null,null]],"paths":[[3,"mz_stream"]]};
searchIndex["snappy_sys"] = {"doc":"","items":[[5,"snappy_compress","snappy_sys","",null,null],[5,"snappy_uncompress","","",null,null],[5,"snappy_max_compressed_length","","",null,null],[5,"snappy_uncompressed_length","","",null,null],[5,"snappy_validate_compressed_buffer","","",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",35,null],[12,"f_frsize","","",35,null],[12,"f_blocks","","",35,null],[12,"f_bfree","","",35,null],[12,"f_bavail","","",35,null],[12,"f_files","","",35,null],[12,"f_ffree","","",35,null],[12,"f_favail","","",35,null],[12,"f_fsid","","",35,null],[12,"f_flag","","",35,null],[12,"f_namemax","","",35,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",36,null],[12,"dqb_bsoftlimit","","",36,null],[12,"dqb_curspace","","",36,null],[12,"dqb_ihardlimit","","",36,null],[12,"dqb_isoftlimit","","",36,null],[12,"dqb_curinodes","","",36,null],[12,"dqb_btime","","",36,null],[12,"dqb_itime","","",36,null],[12,"dqb_valid","","",36,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",37,null],[12,"ssi_errno","","",37,null],[12,"ssi_code","","",37,null],[12,"ssi_pid","","",37,null],[12,"ssi_uid","","",37,null],[12,"ssi_fd","","",37,null],[12,"ssi_tid","","",37,null],[12,"ssi_band","","",37,null],[12,"ssi_overrun","","",37,null],[12,"ssi_trapno","","",37,null],[12,"ssi_status","","",37,null],[12,"ssi_int","","",37,null],[12,"ssi_ptr","","",37,null],[12,"ssi_utime","","",37,null],[12,"ssi_stime","","",37,null],[12,"ssi_addr","","",37,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",38,null],[12,"mq_maxmsg","","",38,null],[12,"mq_msgsize","","",38,null],[12,"mq_curmsgs","","",38,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",39,null],[12,"if_name","","",39,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",40,null],[12,"e_exit","","",40,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",41,null],[12,"tv_usec","","",41,null],[3,"utmpx","","",null,null],[12,"ut_type","","",42,null],[12,"ut_pid","","",42,null],[12,"ut_line","","",42,null],[12,"ut_id","","",42,null],[12,"ut_user","","",42,null],[12,"ut_host","","",42,null],[12,"ut_exit","","",42,null],[12,"ut_session","","",42,null],[12,"ut_tv","","",42,null],[12,"ut_addr_v6","","",42,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",43,null],[12,"sa_mask","","",43,null],[12,"sa_flags","","",43,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",44,null],[12,"ss_flags","","",44,null],[12,"ss_size","","",44,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",45,null],[12,"si_errno","","",45,null],[12,"si_code","","",45,null],[12,"_pad","","",45,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",46,null],[12,"gl_pathv","","",46,null],[12,"gl_offs","","",46,null],[12,"gl_flags","","",46,null],[3,"ucred","","",null,null],[12,"pid","","",47,null],[12,"uid","","",47,null],[12,"gid","","",47,null],[3,"statfs","","",null,null],[12,"f_type","","",48,null],[12,"f_bsize","","",48,null],[12,"f_blocks","","",48,null],[12,"f_bfree","","",48,null],[12,"f_bavail","","",48,null],[12,"f_files","","",48,null],[12,"f_ffree","","",48,null],[12,"f_fsid","","",48,null],[12,"f_namelen","","",48,null],[12,"f_frsize","","",48,null],[3,"msghdr","","",null,null],[12,"msg_name","","",49,null],[12,"msg_namelen","","",49,null],[12,"msg_iov","","",49,null],[12,"msg_iovlen","","",49,null],[12,"msg_control","","",49,null],[12,"msg_controllen","","",49,null],[12,"msg_flags","","",49,null],[3,"termios","","",null,null],[12,"c_iflag","","",50,null],[12,"c_oflag","","",50,null],[12,"c_cflag","","",50,null],[12,"c_lflag","","",50,null],[12,"c_line","","",50,null],[12,"c_cc","","",50,null],[12,"c_ispeed","","",50,null],[12,"c_ospeed","","",50,null],[3,"flock","","",null,null],[12,"l_type","","",51,null],[12,"l_whence","","",51,null],[12,"l_start","","",51,null],[12,"l_len","","",51,null],[12,"l_pid","","",51,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",52,null],[12,"loads","","",52,null],[12,"totalram","","",52,null],[12,"freeram","","",52,null],[12,"sharedram","","",52,null],[12,"bufferram","","",52,null],[12,"totalswap","","",52,null],[12,"freeswap","","",52,null],[12,"procs","","",52,null],[12,"pad","","",52,null],[12,"totalhigh","","",52,null],[12,"freehigh","","",52,null],[12,"mem_unit","","",52,null],[12,"_f","","",52,null],[3,"stat","","",null,null],[12,"st_dev","","",53,null],[12,"st_ino","","",53,null],[12,"st_nlink","","",53,null],[12,"st_mode","","",53,null],[12,"st_uid","","",53,null],[12,"st_gid","","",53,null],[12,"st_rdev","","",53,null],[12,"st_size","","",53,null],[12,"st_blksize","","",53,null],[12,"st_blocks","","",53,null],[12,"st_atime","","",53,null],[12,"st_atime_nsec","","",53,null],[12,"st_mtime","","",53,null],[12,"st_mtime_nsec","","",53,null],[12,"st_ctime","","",53,null],[12,"st_ctime_nsec","","",53,null],[3,"stat64","","",null,null],[12,"st_dev","","",54,null],[12,"st_ino","","",54,null],[12,"st_nlink","","",54,null],[12,"st_mode","","",54,null],[12,"st_uid","","",54,null],[12,"st_gid","","",54,null],[12,"st_rdev","","",54,null],[12,"st_size","","",54,null],[12,"st_blksize","","",54,null],[12,"st_blocks","","",54,null],[12,"st_atime","","",54,null],[12,"st_atime_nsec","","",54,null],[12,"st_mtime","","",54,null],[12,"st_mtime_nsec","","",54,null],[12,"st_ctime","","",54,null],[12,"st_ctime_nsec","","",54,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",55,null],[12,"exponent","","",55,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",56,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",57,null],[12,"swd","","",57,null],[12,"ftw","","",57,null],[12,"fop","","",57,null],[12,"rip","","",57,null],[12,"rdp","","",57,null],[12,"mxcsr","","",57,null],[12,"mxcr_mask","","",57,null],[12,"_st","","",57,null],[12,"_xmm","","",57,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",58,null],[12,"fpregs","","",58,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",59,null],[12,"uc_link","","",59,null],[12,"uc_stack","","",59,null],[12,"uc_mcontext","","",59,null],[12,"uc_sigmask","","",59,null],[3,"ipc_perm","","",null,null],[12,"__key","","",60,null],[12,"uid","","",60,null],[12,"gid","","",60,null],[12,"cuid","","",60,null],[12,"cgid","","",60,null],[12,"mode","","",60,null],[12,"__seq","","",60,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",61,null],[12,"shm_segsz","","",61,null],[12,"shm_atime","","",61,null],[12,"shm_dtime","","",61,null],[12,"shm_ctime","","",61,null],[12,"shm_cpid","","",61,null],[12,"shm_lpid","","",61,null],[12,"shm_nattch","","",61,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",62,null],[11,"is_none","","Returns `true` if the option is a `None` value",62,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",62,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",62,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",62,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",62,null],[11,"unwrap_or","","Returns the contained value or a default.",62,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",62,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",62,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",62,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",62,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",62,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",62,null],[11,"iter","","Returns an iterator over the possibly contained value.",62,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",62,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",62,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",62,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",62,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",62,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",62,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",62,null],[11,"unwrap_or_default","","Returns the contained value or a default",62,null],[11,"hash","core::num","",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",63,null],[11,"cmp","","",63,null],[11,"partial_cmp","","",63,null],[11,"lt","","",63,null],[11,"le","","",63,null],[11,"gt","","",63,null],[11,"ge","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"shl","","",63,null],[11,"shl_assign","","",63,null],[11,"shr","","",63,null],[11,"shr_assign","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"add","","",63,null],[11,"add_assign","","",63,null],[11,"sub","","",63,null],[11,"sub_assign","","",63,null],[11,"mul","","",63,null],[11,"mul_assign","","",63,null],[11,"div","","",63,null],[11,"div_assign","","",63,null],[11,"rem","","",63,null],[11,"rem_assign","","",63,null],[11,"not","","",63,null],[11,"bitxor","","",63,null],[11,"bitxor_assign","","",63,null],[11,"bitor","","",63,null],[11,"bitor_assign","","",63,null],[11,"bitand","","",63,null],[11,"bitand_assign","","",63,null],[11,"neg","","",63,null],[11,"eq","core::num::dec2flt","",64,null],[11,"ne","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"fmt","","",64,null],[11,"fmt","core::num","",65,null],[11,"eq","","",65,null],[11,"clone","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"fmt","","",66,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",67,null],[11,"fmt","","",67,null],[11,"hash","core::nonzero","",68,null],[11,"fmt","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"cmp","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",68,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",68,null],[11,"new","core::ptr","Creates a new `Unique`.",69,null],[11,"get","","Dereferences the content.",69,null],[11,"get_mut","","Mutably dereferences the content.",69,null],[11,"deref","","",69,null],[11,"fmt","","",69,null],[11,"new","","Creates a new `Shared`.",70,null],[11,"clone","","",70,null],[11,"deref","","",70,null],[11,"fmt","","",70,null],[11,"hash","core::marker","",71,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"cmp","","",71,null],[11,"clone","","",71,null],[11,"default","","",71,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",72,null],[11,"eq","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",72,null],[11,"hash","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"contains","","# Examples",73,null],[11,"hash","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"contains","","# Examples",74,null],[11,"hash","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"contains","","# Examples",75,null],[11,"hash","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"contains","","# Examples",76,null],[11,"hash","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"contains","","# Examples",77,null],[11,"hash","core::cmp","",78,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"clone","","",78,null],[11,"reverse","","Reverse the `Ordering`.",78,null],[11,"cmp","","",78,null],[11,"partial_cmp","","",78,null],[11,"fmt","libc","",79,null],[11,"fmt","","",79,null],[11,"is","","Returns true if the boxed type is the same as `T`",79,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",79,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",79,null],[11,"is","","Forwards to the method defined on the type `Any`.",79,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",79,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",79,null],[11,"hash","core::any","",80,null],[11,"fmt","","",80,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",80,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",81,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",82,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",83,null],[11,"clone","","",83,null],[11,"new","","Creates a new `AtomicBool`.",81,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",81,null],[11,"store","","Stores a value into the bool.",81,null],[11,"swap","","Stores a value into the bool, returning the old value.",81,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",81,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",81,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",81,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",81,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",81,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",81,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",81,null],[11,"new","","Creates a new `AtomicPtr`.",82,null],[11,"load","","Loads a value from the pointer.",82,null],[11,"store","","Stores a value into the pointer.",82,null],[11,"swap","","Stores a value into the pointer, returning the old value.",82,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",82,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",82,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",82,null],[11,"default","","",84,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",84,null],[11,"new","","Creates a new atomic integer.",84,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",84,null],[11,"store","","Stores a value into the atomic integer.",84,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",84,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",84,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",84,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",84,null],[11,"fetch_add","","Add to the current value, returning the previous value.",84,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",84,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",84,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",84,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",84,null],[11,"default","","",85,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",85,null],[11,"new","","Creates a new atomic integer.",85,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",85,null],[11,"store","","Stores a value into the atomic integer.",85,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",85,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",85,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",85,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",85,null],[11,"fetch_add","","Add to the current value, returning the previous value.",85,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",85,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",85,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",85,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",85,null],[11,"default","","",86,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",86,null],[11,"new","","Creates a new atomic integer.",86,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",86,null],[11,"store","","Stores a value into the atomic integer.",86,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",86,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",86,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",86,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",86,null],[11,"fetch_add","","Add to the current value, returning the previous value.",86,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",86,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",86,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",86,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",86,null],[11,"default","","",87,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",87,null],[11,"new","","Creates a new atomic integer.",87,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",87,null],[11,"store","","Stores a value into the atomic integer.",87,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",87,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",87,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",87,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",87,null],[11,"fetch_add","","Add to the current value, returning the previous value.",87,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",87,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",87,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",87,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",87,null],[11,"default","","",88,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",88,null],[11,"new","","Creates a new atomic integer.",88,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",88,null],[11,"store","","Stores a value into the atomic integer.",88,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",88,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",88,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",88,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",88,null],[11,"fetch_add","","Add to the current value, returning the previous value.",88,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",88,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",88,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",88,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",88,null],[11,"default","","",89,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",89,null],[11,"new","","Creates a new atomic integer.",89,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",89,null],[11,"store","","Stores a value into the atomic integer.",89,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",89,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",89,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",89,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",89,null],[11,"fetch_add","","Add to the current value, returning the previous value.",89,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",89,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",89,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",89,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",89,null],[11,"default","","",90,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",90,null],[11,"new","","Creates a new atomic integer.",90,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",90,null],[11,"store","","Stores a value into the atomic integer.",90,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",90,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",90,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",90,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",90,null],[11,"fetch_add","","Add to the current value, returning the previous value.",90,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",90,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",90,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",90,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",90,null],[11,"default","","",91,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",91,null],[11,"new","","Creates a new atomic integer.",91,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",91,null],[11,"store","","Stores a value into the atomic integer.",91,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",91,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",91,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",91,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",91,null],[11,"fetch_add","","Add to the current value, returning the previous value.",91,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",91,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",91,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",91,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",91,null],[11,"default","","",92,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",92,null],[11,"new","","Creates a new atomic integer.",92,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",92,null],[11,"store","","Stores a value into the atomic integer.",92,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",92,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",92,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",92,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",92,null],[11,"fetch_add","","Add to the current value, returning the previous value.",92,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",92,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",92,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",92,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",92,null],[11,"default","","",93,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",93,null],[11,"new","","Creates a new atomic integer.",93,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",93,null],[11,"store","","Stores a value into the atomic integer.",93,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",93,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",93,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",93,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",93,null],[11,"fetch_add","","Add to the current value, returning the previous value.",93,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",93,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",93,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",93,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",93,null],[11,"fmt","","",81,null],[11,"fmt","","",82,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",94,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",94,null],[11,"set","","Sets the contained value.",94,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",94,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",94,null],[11,"clone","","",94,null],[11,"default","","",94,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",94,null],[11,"partial_cmp","","",94,null],[11,"lt","","",94,null],[11,"le","","",94,null],[11,"gt","","",94,null],[11,"ge","","",94,null],[11,"cmp","","",94,null],[11,"fmt","","",95,null],[11,"eq","","",95,null],[11,"clone","","",95,null],[11,"new","","Creates a new `RefCell` containing `value`.",96,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",96,null],[11,"borrow_state","","Query the current state of this `RefCell`",96,null],[11,"borrow","","Immutably borrows the wrapped value.",96,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",96,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",96,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",96,null],[11,"clone","","",96,null],[11,"default","","",96,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",96,null],[11,"partial_cmp","","",96,null],[11,"lt","","",96,null],[11,"le","","",96,null],[11,"gt","","",96,null],[11,"ge","","",96,null],[11,"cmp","","",96,null],[11,"deref","","",97,null],[11,"clone","","Copies a `Ref`.",97,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",97,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",98,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",98,null],[11,"deref_mut","","",98,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",99,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",99,null],[11,"get","","Gets a mutable pointer to the wrapped value.",99,null],[11,"default","","",99,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",100,null],[11,"clone","","",100,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"count","","",100,null],[11,"last","","",100,null],[11,"len","","",100,null],[11,"fmt","","",101,null],[11,"clone","","",101,null],[11,"next","","",101,null],[11,"size_hint","","",101,null],[11,"count","","",101,null],[11,"nth","","",101,null],[11,"last","","",101,null],[11,"len","","",101,null],[11,"fmt","","",102,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",102,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"fmt","","",103,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"fmt","core::iter::range","",104,null],[11,"clone","","",104,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",74,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",73,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",76,null],[11,"next","core::iter::range","",104,null],[11,"size_hint","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next","core::ops","",73,null],[11,"size_hint","","",73,null],[11,"next_back","","",73,null],[11,"next","","",74,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next_back","","",76,null],[11,"fmt","core::iter::sources","",105,null],[11,"clone","","",105,null],[11,"next","","",105,null],[11,"size_hint","","",105,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"next","","",106,null],[11,"size_hint","","",106,null],[11,"next_back","","",106,null],[11,"len","","",106,null],[11,"clone","","",106,null],[11,"default","","",106,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"next_back","","",107,null],[11,"len","","",107,null],[11,"fmt","core::iter","",108,null],[11,"clone","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"next_back","","",108,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"next","","",109,null],[11,"size_hint","","",109,null],[11,"next_back","","",109,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"next","","",110,null],[11,"size_hint","","",110,null],[11,"fmt","","",111,null],[11,"clone","","",111,null],[11,"next","","",111,null],[11,"count","","",111,null],[11,"nth","","",111,null],[11,"find","","",111,null],[11,"last","","",111,null],[11,"size_hint","","",111,null],[11,"next_back","","",111,null],[11,"fmt","","",112,null],[11,"clone","","",112,null],[11,"next","","",112,null],[11,"size_hint","","",112,null],[11,"next_back","","",112,null],[11,"clone","","",113,null],[11,"fmt","","",113,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"next_back","","",113,null],[11,"clone","","",114,null],[11,"fmt","","",114,null],[11,"next","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"clone","","",115,null],[11,"fmt","","",115,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"next_back","","",115,null],[11,"fmt","","",116,null],[11,"clone","","",116,null],[11,"next","","# Overflow Behavior",116,null],[11,"size_hint","","",116,null],[11,"nth","","",116,null],[11,"count","","",116,null],[11,"next_back","","",116,null],[11,"fmt","","",117,null],[11,"clone","","",117,null],[11,"next","","",117,null],[11,"count","","",117,null],[11,"nth","","",117,null],[11,"last","","",117,null],[11,"size_hint","","",117,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",117,null],[11,"is_empty","","Checks if the iterator has finished iterating.",117,null],[11,"clone","","",118,null],[11,"fmt","","",118,null],[11,"next","","",118,null],[11,"size_hint","","",118,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"next","","",119,null],[11,"size_hint","","",119,null],[11,"fmt","","",120,null],[11,"clone","","",120,null],[11,"next","","",120,null],[11,"nth","","",120,null],[11,"count","","",120,null],[11,"last","","",120,null],[11,"size_hint","","",120,null],[11,"next_back","","",120,null],[11,"fmt","","",121,null],[11,"clone","","",121,null],[11,"next","","",121,null],[11,"nth","","",121,null],[11,"size_hint","","",121,null],[11,"clone","","",122,null],[11,"fmt","","",122,null],[11,"next","","",122,null],[11,"size_hint","","",122,null],[11,"clone","","",123,null],[11,"fmt","","",123,null],[11,"next","","",123,null],[11,"size_hint","","",123,null],[11,"next_back","","",123,null],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"next","","",124,null],[11,"nth","","",124,null],[11,"last","","",124,null],[11,"count","","",124,null],[11,"size_hint","","",124,null],[11,"next_back","","",124,null],[11,"clone","","",125,null],[11,"fmt","","",125,null],[11,"next","","",125,null],[11,"size_hint","","",125,null],[11,"next_back","","",125,null],[11,"hash","core::option","",62,null],[11,"fmt","","",62,null],[11,"cmp","","",62,null],[11,"partial_cmp","","",62,null],[11,"lt","","",62,null],[11,"le","","",62,null],[11,"gt","","",62,null],[11,"ge","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"clone","","",62,null],[11,"default","","",62,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",62,null],[11,"fmt","","",126,null],[11,"next","","",126,null],[11,"size_hint","","",126,null],[11,"next_back","","",126,null],[11,"clone","","",126,null],[11,"fmt","","",127,null],[11,"next","","",127,null],[11,"size_hint","","",127,null],[11,"next_back","","",127,null],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"next","","",128,null],[11,"size_hint","","",128,null],[11,"next_back","","",128,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",62,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",129,null],[11,"hash","core::result","",130,null],[11,"fmt","","",130,null],[11,"cmp","","",130,null],[11,"partial_cmp","","",130,null],[11,"lt","","",130,null],[11,"le","","",130,null],[11,"gt","","",130,null],[11,"ge","","",130,null],[11,"eq","","",130,null],[11,"ne","","",130,null],[11,"clone","","",130,null],[11,"is_ok","","Returns true if the result is `Ok`",130,null],[11,"is_err","","Returns true if the result is `Err`",130,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",130,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",130,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",130,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",130,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",130,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",130,null],[11,"iter","","Returns an iterator over the possibly contained value.",130,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",130,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",130,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",130,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",130,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",130,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",130,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",130,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",130,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",130,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",130,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",130,null],[11,"fmt","","",131,null],[11,"next","","",131,null],[11,"size_hint","","",131,null],[11,"next_back","","",131,null],[11,"clone","","",131,null],[11,"fmt","","",132,null],[11,"next","","",132,null],[11,"size_hint","","",132,null],[11,"next_back","","",132,null],[11,"fmt","","",133,null],[11,"next","","",133,null],[11,"size_hint","","",133,null],[11,"next_back","","",133,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",130,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",134,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",134,null],[11,"next","","",134,null],[11,"size_hint","","",134,null],[11,"count","","",134,null],[11,"nth","","",134,null],[11,"last","","",134,null],[11,"next_back","","",134,null],[11,"clone","","",134,null],[11,"fmt","","",135,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",135,null],[11,"next","","",135,null],[11,"size_hint","","",135,null],[11,"count","","",135,null],[11,"nth","","",135,null],[11,"last","","",135,null],[11,"next_back","","",135,null],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"next","","",136,null],[11,"size_hint","","",136,null],[11,"next_back","","",136,null],[11,"fmt","","",137,null],[11,"next","","",137,null],[11,"size_hint","","",137,null],[11,"next_back","","",137,null],[11,"fmt","","",138,null],[11,"fmt","","",139,null],[11,"fmt","","",140,null],[11,"fmt","","",141,null],[11,"next","","",138,null],[11,"size_hint","","",138,null],[11,"next","","",139,null],[11,"size_hint","","",139,null],[11,"next","","",140,null],[11,"size_hint","","",140,null],[11,"next","","",141,null],[11,"size_hint","","",141,null],[11,"fmt","","",142,null],[11,"clone","","",142,null],[11,"next","","",142,null],[11,"size_hint","","",142,null],[11,"count","","",142,null],[11,"nth","","",142,null],[11,"last","","",142,null],[11,"next_back","","",142,null],[11,"fmt","","",143,null],[11,"clone","","",143,null],[11,"next","","",143,null],[11,"size_hint","","",143,null],[11,"count","","",143,null],[11,"nth","","",143,null],[11,"last","","",143,null],[11,"next_back","","",143,null],[11,"fmt","","",144,null],[11,"next","","",144,null],[11,"size_hint","","",144,null],[11,"count","","",144,null],[11,"nth","","",144,null],[11,"last","","",144,null],[11,"next_back","","",144,null],[11,"fmt","core::str::pattern","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"clone","","",145,null],[11,"fmt","","",146,null],[11,"clone","","",146,null],[11,"haystack","","",146,null],[11,"next","","",146,null],[11,"next_match","","",146,null],[11,"next_reject","","",146,null],[11,"next_back","","",146,null],[11,"next_match_back","","",146,null],[11,"next_reject_back","","",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"haystack","","",147,null],[11,"next","","",147,null],[11,"next_match","","",147,null],[11,"next_reject","","",147,null],[11,"next_back","","",147,null],[11,"next_match_back","","",147,null],[11,"next_reject_back","","",147,null],[11,"clone","","",148,null],[11,"fmt","","",148,null],[11,"haystack","","",148,null],[11,"next","","",148,null],[11,"next_match","","",148,null],[11,"next_reject","","",148,null],[11,"next_back","","",148,null],[11,"next_match_back","","",148,null],[11,"next_reject_back","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"haystack","","",149,null],[11,"next","","",149,null],[11,"next_match","","",149,null],[11,"next_back","","",149,null],[11,"next_match_back","","",149,null],[11,"eq","core::str","",150,null],[11,"ne","","",150,null],[11,"clone","","",150,null],[11,"fmt","","",150,null],[11,"fmt","","",150,null],[11,"fmt","","",151,null],[11,"clone","","",151,null],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",151,null],[11,"fmt","","",151,null],[11,"fmt","","",152,null],[11,"clone","","",152,null],[11,"next","","",152,null],[11,"size_hint","","",152,null],[11,"next_back","","",152,null],[11,"as_str","","View the underlying data as a subslice of the original data.",152,null],[11,"fmt","","",153,null],[11,"clone","","",153,null],[11,"next","","",153,null],[11,"size_hint","","",153,null],[11,"next_back","","",153,null],[11,"as_str","","View the underlying data as a subslice of the original data.",153,null],[11,"fmt","","",154,null],[11,"clone","","",154,null],[11,"next","","",154,null],[11,"size_hint","","",154,null],[11,"count","","",154,null],[11,"last","","",154,null],[11,"nth","","",154,null],[11,"next_back","","",154,null],[11,"len","","",154,null],[11,"fmt","","",155,null],[11,"next","","",155,null],[11,"clone","","",155,null],[11,"fmt","","",156,null],[11,"next","","",156,null],[11,"clone","","",156,null],[11,"next_back","","",155,null],[11,"next_back","","",156,null],[11,"fmt","","",157,null],[11,"next","","",157,null],[11,"clone","","",157,null],[11,"fmt","","",158,null],[11,"next","","",158,null],[11,"clone","","",158,null],[11,"next_back","","",157,null],[11,"next_back","","",158,null],[11,"fmt","","",159,null],[11,"next","","",159,null],[11,"clone","","",159,null],[11,"fmt","","",160,null],[11,"next","","",160,null],[11,"clone","","",160,null],[11,"fmt","","",161,null],[11,"next","","",161,null],[11,"clone","","",161,null],[11,"fmt","","",162,null],[11,"next","","",162,null],[11,"clone","","",162,null],[11,"next_back","","",161,null],[11,"next_back","","",162,null],[11,"fmt","","",163,null],[11,"next","","",163,null],[11,"clone","","",163,null],[11,"fmt","","",164,null],[11,"next","","",164,null],[11,"clone","","",164,null],[11,"next_back","","",163,null],[11,"next_back","","",164,null],[11,"fmt","","",165,null],[11,"clone","","",165,null],[11,"next","","",165,null],[11,"size_hint","","",165,null],[11,"next_back","","",165,null],[11,"fmt","","",166,null],[11,"clone","","",166,null],[11,"next","","",166,null],[11,"size_hint","","",166,null],[11,"next_back","","",166,null],[11,"default","core::hash::sip","",167,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",167,null],[11,"fmt","","",167,null],[11,"default","","",168,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",168,null],[11,"fmt","","",168,null],[11,"default","","",169,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",169,null],[11,"fmt","","",169,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",169,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",169,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",167,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",167,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",168,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",168,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",169,null],[11,"finish","","",169,null],[11,"write","","",167,null],[11,"finish","","",167,null],[11,"write","","",168,null],[11,"finish","","",168,null],[11,"fmt","core::hash","",170,null],[11,"build_hasher","","",170,null],[11,"clone","","",170,null],[11,"default","","",170,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",171,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",172,null],[11,"finish","","Finishes output and returns any error encountered.",172,null],[11,"field","","Adds a new field to the generated tuple struct output.",173,null],[11,"finish","","Finishes output and returns any error encountered.",173,null],[11,"entry","","Adds a new entry to the set output.",174,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",174,null],[11,"finish","","Finishes output and returns any error encountered.",174,null],[11,"entry","","Adds a new entry to the list output.",175,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",175,null],[11,"finish","","Finishes output and returns any error encountered.",175,null],[11,"entry","","Adds a new entry to the map output.",176,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",176,null],[11,"finish","","Finishes output and returns any error encountered.",176,null],[11,"partial_cmp","core::fmt","",177,null],[11,"eq","","",177,null],[11,"cmp","","",177,null],[11,"hash","","",177,null],[11,"default","","",177,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",177,null],[11,"clone","","",177,null],[11,"clone","","",178,null],[11,"fmt","","",178,null],[11,"fmt","","",178,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",179,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",179,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",179,null],[11,"write_fmt","","Writes some formatted information into this instance",179,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",179,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",179,null],[11,"align","","Flag indicating what form of alignment was requested",179,null],[11,"width","","Optionally specified integer width that the output should be",179,null],[11,"precision","","Optionally specified precision for numeric types",179,null],[11,"sign_plus","","Determines if the `+` flag was specified.",179,null],[11,"sign_minus","","Determines if the `-` flag was specified.",179,null],[11,"alternate","","Determines if the `#` flag was specified.",179,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",179,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",179,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",179,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",179,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",179,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",179,null],[11,"write_str","","",179,null],[11,"write_char","","",179,null],[11,"write_fmt","","",179,null],[11,"fmt","","",177,null],[11,"fmt","core::marker","",71,null],[11,"fmt","core::cell","",94,null],[11,"fmt","","",96,null],[11,"fmt","","",97,null],[11,"fmt","","",98,null],[11,"fmt","","",99,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",180,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",180,null],[11,"clone","libc","",53,null],[11,"clone","","",54,null],[11,"clone","","",181,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",182,null],[11,"clone","","",52,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",183,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",184,null],[11,"clone","","",185,null],[11,"clone","","",186,null],[11,"clone","","",187,null],[11,"clone","","",188,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",189,null],[11,"clone","","",38,null],[11,"clone","","",190,null],[11,"clone","","",39,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",191,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["ref_slice"] = {"doc":"","items":[[5,"ref_slice","ref_slice","Converts a reference to A into a slice of length 1 (without copying).",null,null],[5,"ref_slice_mut","","Converts a reference to A into a slice of length 1 (without copying).",null,null],[5,"opt_slice","","Converts a reference to Option&lt;A&gt; into a slice of length 0 or 1 (without copying).",null,null],[5,"opt_slice_mut","","Converts a reference to Option&lt;A&gt; into a slice of length 0 or 1 (without copying).",null,null]],"paths":[]};
searchIndex["openssl_sys_extras"] = {"doc":"","items":[[5,"SSL_CTX_set_options","openssl_sys_extras","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Final","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"BIO_eof","","",null,null],[5,"BIO_set_nbio","","",null,null],[5,"BIO_set_mem_eof_return","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"BIO_flush","","",null,null],[5,"SSL_CTX_set_options_shim","","",null,null],[5,"SSL_CTX_get_options_shim","","",null,null],[5,"SSL_CTX_clear_options_shim","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"X509_get_extensions","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_CTX_set_tlsext_servername_arg","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_DTLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null]],"paths":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["crc"] = {"doc":"# crc\nRust implementation of CRC(32, 64)","items":[[0,"crc32","crc","",null,null],[3,"IEEE_TABLE","crc::crc32","",null,null],[3,"CASTAGNOLI_TABLE","","",null,null],[3,"KOOPMAN_TABLE","","",null,null],[3,"Digest","","",null,null],[5,"make_table","","",null,null],[5,"update","","",null,null],[5,"checksum_ieee","","",null,null],[5,"checksum_castagnoli","","",null,null],[5,"checksum_koopman","","",null,null],[17,"CASTAGNOLI","","",null,null],[17,"IEEE","","",null,null],[17,"KOOPMAN","","",null,null],[8,"Hasher32","","",null,null],[10,"reset","","",0,null],[10,"write","","",0,null],[10,"sum32","","",0,null],[11,"deref","","",1,null],[11,"deref","","",2,null],[11,"deref","","",3,null],[11,"new","","",4,{"inputs":[{"name":"u32"}],"output":{"name":"digest"}}],[11,"new_with_initial","","",4,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"digest"}}],[11,"reset","","",4,null],[11,"write","","",4,null],[11,"sum32","","",4,null],[0,"crc64","crc","",null,null],[3,"ECMA_TABLE","crc::crc64","",null,null],[3,"ISO_TABLE","","",null,null],[3,"Digest","","",null,null],[5,"make_table","","",null,null],[5,"update","","",null,null],[5,"checksum_ecma","","",null,null],[5,"checksum_iso","","",null,null],[17,"ECMA","","",null,null],[17,"ISO","","",null,null],[8,"Hasher64","","",null,null],[10,"reset","","",5,null],[10,"write","","",5,null],[10,"sum64","","",5,null],[11,"deref","","",6,null],[11,"deref","","",7,null],[11,"new","","",8,{"inputs":[{"name":"u64"}],"output":{"name":"digest"}}],[11,"new_with_initial","","",8,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"digest"}}],[11,"reset","","",8,null],[11,"write","","",8,null],[11,"sum64","","",8,null]],"paths":[[8,"Hasher32"],[3,"IEEE_TABLE"],[3,"CASTAGNOLI_TABLE"],[3,"KOOPMAN_TABLE"],[3,"Digest"],[8,"Hasher64"],[3,"ECMA_TABLE"],[3,"ISO_TABLE"],[3,"Digest"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[11,"hash","core::num","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"eq","core::num::dec2flt","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","core::num","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"hash","core::nonzero","",5,null],[11,"fmt","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",5,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",5,null],[11,"new","core::ptr","Creates a new `Unique`.",6,null],[11,"get","","Dereferences the content.",6,null],[11,"get_mut","","Mutably dereferences the content.",6,null],[11,"deref","","",6,null],[11,"fmt","","",6,null],[11,"new","","Creates a new `Shared`.",7,null],[11,"clone","","",7,null],[11,"deref","","",7,null],[11,"fmt","","",7,null],[11,"hash","core::marker","",8,null],[11,"eq","","",8,null],[11,"partial_cmp","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"hash","core::ops","",9,null],[11,"eq","","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"hash","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"contains","","# Examples",10,null],[11,"hash","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"contains","","# Examples",11,null],[11,"hash","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"contains","","# Examples",12,null],[11,"hash","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"contains","","# Examples",13,null],[11,"hash","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"contains","","# Examples",14,null],[11,"hash","core::cmp","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"reverse","","Reverse the `Ordering`.",15,null],[11,"cmp","","",15,null],[11,"partial_cmp","","",15,null],[11,"fmt","","",16,null],[11,"fmt","","",16,null],[11,"is","","Returns true if the boxed type is the same as `T`",16,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"is","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",16,null],[11,"hash","core::any","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",17,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",18,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"new","","Creates a new `AtomicBool`.",18,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",18,null],[11,"store","","Stores a value into the bool.",18,null],[11,"swap","","Stores a value into the bool, returning the old value.",18,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",18,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",18,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",18,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",18,null],[11,"new","","Creates a new `AtomicPtr`.",19,null],[11,"load","","Loads a value from the pointer.",19,null],[11,"store","","Stores a value into the pointer.",19,null],[11,"swap","","Stores a value into the pointer, returning the old value.",19,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"default","","",21,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",21,null],[11,"new","","Creates a new atomic integer.",21,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",21,null],[11,"store","","Stores a value into the atomic integer.",21,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",21,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"fetch_add","","Add to the current value, returning the previous value.",21,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",21,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",21,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",21,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",22,null],[11,"new","","Creates a new atomic integer.",22,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",22,null],[11,"store","","Stores a value into the atomic integer.",22,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"fetch_add","","Add to the current value, returning the previous value.",22,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",22,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",22,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",22,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",23,null],[11,"new","","Creates a new atomic integer.",23,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",23,null],[11,"store","","Stores a value into the atomic integer.",23,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"fetch_add","","Add to the current value, returning the previous value.",23,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",23,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",23,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",23,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",24,null],[11,"new","","Creates a new atomic integer.",24,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",24,null],[11,"store","","Stores a value into the atomic integer.",24,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"fetch_add","","Add to the current value, returning the previous value.",24,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",24,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",24,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",24,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",31,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",31,null],[11,"set","","Sets the contained value.",31,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",31,null],[11,"partial_cmp","","",31,null],[11,"lt","","",31,null],[11,"le","","",31,null],[11,"gt","","",31,null],[11,"ge","","",31,null],[11,"cmp","","",31,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"new","","Creates a new `RefCell` containing `value`.",33,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",33,null],[11,"borrow_state","","Query the current state of this `RefCell`",33,null],[11,"borrow","","Immutably borrows the wrapped value.",33,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",33,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",33,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",33,null],[11,"clone","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",33,null],[11,"partial_cmp","","",33,null],[11,"lt","","",33,null],[11,"le","","",33,null],[11,"gt","","",33,null],[11,"ge","","",33,null],[11,"cmp","","",33,null],[11,"deref","","",34,null],[11,"clone","","Copies a `Ref`.",34,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",34,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",35,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",36,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",36,null],[11,"get","","Gets a mutable pointer to the wrapped value.",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",37,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"count","","",37,null],[11,"last","","",37,null],[11,"len","","",37,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"count","","",38,null],[11,"nth","","",38,null],[11,"last","","",38,null],[11,"len","","",38,null],[11,"fmt","","",39,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"fmt","","",40,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"fmt","core::iter::range","",41,null],[11,"clone","","",41,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",11,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",10,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",13,null],[11,"next","core::iter::range","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","core::ops","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"next","","",11,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"fmt","core::iter::sources","",42,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"fmt","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"len","","",43,null],[11,"clone","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"len","","",44,null],[11,"fmt","core::iter","",45,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"count","","",48,null],[11,"nth","","",48,null],[11,"find","","",48,null],[11,"last","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","# Overflow Behavior",53,null],[11,"size_hint","","",53,null],[11,"nth","","",53,null],[11,"count","","",53,null],[11,"next_back","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"count","","",54,null],[11,"nth","","",54,null],[11,"last","","",54,null],[11,"size_hint","","",54,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",54,null],[11,"is_empty","","Checks if the iterator has finished iterating.",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","",57,null],[11,"nth","","",57,null],[11,"count","","",57,null],[11,"last","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"nth","","",58,null],[11,"size_hint","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"next_back","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"nth","","",61,null],[11,"last","","",61,null],[11,"count","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"hash","core::option","",63,null],[11,"fmt","","",63,null],[11,"cmp","","",63,null],[11,"partial_cmp","","",63,null],[11,"lt","","",63,null],[11,"le","","",63,null],[11,"gt","","",63,null],[11,"ge","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"is_some","","Returns `true` if the option is a `Some` value",63,null],[11,"is_none","","Returns `true` if the option is a `None` value",63,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",63,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",63,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",63,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",63,null],[11,"unwrap_or","","Returns the contained value or a default.",63,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",63,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",63,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",63,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",63,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",63,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",63,null],[11,"iter","","Returns an iterator over the possibly contained value.",63,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",63,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",63,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",63,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",63,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",63,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",63,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",63,null],[11,"unwrap_or_default","","Returns the contained value or a default",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",63,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",63,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",67,null],[11,"hash","core::result","",68,null],[11,"fmt","","",68,null],[11,"cmp","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"is_ok","","Returns true if the result is `Ok`",68,null],[11,"is_err","","Returns true if the result is `Err`",68,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",68,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",68,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",68,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",68,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",68,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",68,null],[11,"iter","","Returns an iterator over the possibly contained value.",68,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",68,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",68,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",68,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",68,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",68,null],[11,"fmt","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",68,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",72,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"count","","",72,null],[11,"nth","","",72,null],[11,"last","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",73,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"count","","",73,null],[11,"nth","","",73,null],[11,"last","","",73,null],[11,"next_back","","",73,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"count","","",80,null],[11,"nth","","",80,null],[11,"last","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"count","","",81,null],[11,"nth","","",81,null],[11,"last","","",81,null],[11,"next_back","","",81,null],[11,"fmt","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"next_back","","",82,null],[11,"fmt","core::str::pattern","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"haystack","","",84,null],[11,"next","","",84,null],[11,"next_match","","",84,null],[11,"next_reject","","",84,null],[11,"next_back","","",84,null],[11,"next_match_back","","",84,null],[11,"next_reject_back","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"haystack","","",85,null],[11,"next","","",85,null],[11,"next_match","","",85,null],[11,"next_reject","","",85,null],[11,"next_back","","",85,null],[11,"next_match_back","","",85,null],[11,"next_reject_back","","",85,null],[11,"clone","","",86,null],[11,"fmt","","",86,null],[11,"haystack","","",86,null],[11,"next","","",86,null],[11,"next_match","","",86,null],[11,"next_reject","","",86,null],[11,"next_back","","",86,null],[11,"next_match_back","","",86,null],[11,"next_reject_back","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"eq","core::str","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",89,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"as_str","","View the underlying data as a subslice of the original data.",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"as_str","","View the underlying data as a subslice of the original data.",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"count","","",92,null],[11,"last","","",92,null],[11,"nth","","",92,null],[11,"next_back","","",92,null],[11,"len","","",92,null],[11,"fmt","","",93,null],[11,"next","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"clone","","",94,null],[11,"next_back","","",93,null],[11,"next_back","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"next_back","","",95,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"next_back","","",99,null],[11,"next_back","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"next_back","","",101,null],[11,"next_back","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"default","core::hash::sip","",105,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"clone","","",105,null],[11,"fmt","","",105,null],[11,"default","","",106,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"clone","","",106,null],[11,"fmt","","",106,null],[11,"default","","",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"clone","","",107,null],[11,"fmt","","",107,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",107,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"new","","Creates a new `SipHasher13` with the two initial keys set to 0.",105,{"inputs":[],"output":{"name":"siphasher13"}}],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",105,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher13"}}],[11,"new","","Creates a new `SipHasher24` with the two initial keys set to 0.",106,{"inputs":[],"output":{"name":"siphasher24"}}],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",106,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher24"}}],[11,"write","","",107,null],[11,"finish","","",107,null],[11,"write","","",105,null],[11,"finish","","",105,null],[11,"write","","",106,null],[11,"finish","","",106,null],[11,"fmt","core::hash","",108,null],[11,"build_hasher","","",108,null],[11,"clone","","",108,null],[11,"default","","",108,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",109,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",110,null],[11,"finish","","Finishes output and returns any error encountered.",110,null],[11,"field","","Adds a new field to the generated tuple struct output.",111,null],[11,"finish","","Finishes output and returns any error encountered.",111,null],[11,"entry","","Adds a new entry to the set output.",112,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"entry","","Adds a new entry to the list output.",113,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"entry","","Adds a new entry to the map output.",114,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",114,null],[11,"finish","","Finishes output and returns any error encountered.",114,null],[11,"partial_cmp","core::fmt","",115,null],[11,"eq","","",115,null],[11,"cmp","","",115,null],[11,"hash","","",115,null],[11,"default","","",115,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"fmt","","",116,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",117,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",117,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",117,null],[11,"write_fmt","","Writes some formatted information into this instance",117,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",117,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",117,null],[11,"align","","Flag indicating what form of alignment was requested",117,null],[11,"width","","Optionally specified integer width that the output should be",117,null],[11,"precision","","Optionally specified precision for numeric types",117,null],[11,"sign_plus","","Determines if the `+` flag was specified.",117,null],[11,"sign_minus","","Determines if the `-` flag was specified.",117,null],[11,"alternate","","Determines if the `#` flag was specified.",117,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",117,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",117,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",117,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",117,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",117,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",117,null],[11,"write_str","","",117,null],[11,"write_char","","",117,null],[11,"write_fmt","","",117,null],[11,"fmt","","",115,null],[11,"fmt","core::marker","",8,null],[11,"fmt","core::cell","",31,null],[11,"fmt","","",33,null],[11,"fmt","","",34,null],[11,"fmt","","",35,null],[11,"fmt","","",36,null],[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",118,null],[10,"deref","","The method called to dereference a value",118,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",119,null],[12,"1","","",119,null],[11,"get","","",119,null],[14,"__lazy_static_create!","lazy_static","",null,null],[14,"lazy_static!","","",null,null]],"paths":[[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"__Deref"],[3,"Lazy"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
